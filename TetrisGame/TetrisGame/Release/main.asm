; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27034.0 

	TITLE	d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_1CC@EHEMJFD@?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX@ ; `string'
PUBLIC	??_C@_1CC@MOFDAOCN@?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@ ; `string'
PUBLIC	??_C@_1CC@ECBDCMKP@?$AA?4?$AA?4?$AA?4?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@ ; `string'
PUBLIC	??_C@_1CC@FAAJCMCD@?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AA?4?$AA?4@ ; `string'
PUBLIC	??_C@_1CC@NFCFOJPC@?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@ ; `string'
PUBLIC	??_C@_1CC@MAAFJCMK@?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@ ; `string'
PUBLIC	??_C@_1CC@FFPIPNHC@?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@ ; `string'
PUBLIC	??_C@_04KLNKAGHM@?8?$CF?$CIZ@			; `string'
PUBLIC	??_C@_1BG@HNHDAONN@?$AA?5?$AAA?$AAB?$AAC?$AAD?$AAE?$AAF?$AAG?$AA?$DN?$AA?$CD@ ; `string'
PUBLIC	??_C@_05PDJBBECF@pause@				; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	?nScreenWidth@@3HA				; nScreenWidth
PUBLIC	?nFieldHeight@@3HA				; nFieldHeight
PUBLIC	?nScreenHeight@@3HA				; nScreenHeight
PUBLIC	?pField@@3PAEA					; pField
PUBLIC	?nFieldWidth@@3HA				; nFieldWidth
EXTRN	__imp__WriteConsoleOutputCharacterW@20:PROC
EXTRN	??_L@YGXPAXIIP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	__imp___invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp___Xtime_get_ticks:PROC
EXTRN	__imp____std_terminate:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	__imp__GetAsyncKeyState@4:PROC
EXTRN	__imp___Thrd_sleep:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__system:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__imp__rand:PROC
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	__imp__CreateConsoleScreenBuffer@20:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__imp__SetConsoleActiveScreenBuffer@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__imp____CxxFrameHandler3:PROC
?pField@@3PAEA DD 01H DUP (?)				; pField
_BSS	ENDS
?nScreenWidth@@3HA DD 053H				; nScreenWidth
?nFieldHeight@@3HA DD 012H				; nFieldHeight
?nScreenHeight@@3HA DD 01eH				; nScreenHeight
?nFieldWidth@@3HA DD 08H				; nFieldWidth
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@ DB 'vector<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05PDJBBECF@pause@
CONST	SEGMENT
??_C@_05PDJBBECF@pause@ DB 'pause', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@HNHDAONN@?$AA?5?$AAA?$AAB?$AAC?$AAD?$AAE?$AAF?$AAG?$AA?$DN?$AA?$CD@
CONST	SEGMENT
??_C@_1BG@HNHDAONN@?$AA?5?$AAA?$AAB?$AAC?$AAD?$AAE?$AAF?$AAG?$AA?$DN?$AA?$CD@ DB ' '
	DB	00H, 'A', 00H, 'B', 00H, 'C', 00H, 'D', 00H, 'E', 00H, 'F', 00H
	DB	'G', 00H, '=', 00H, '#', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04KLNKAGHM@?8?$CF?$CIZ@
CONST	SEGMENT
??_C@_04KLNKAGHM@?8?$CF?$CIZ@ DB '''%(Z', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@FFPIPNHC@?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@
CONST	SEGMENT
??_C@_1CC@FFPIPNHC@?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@ DB '.'
	DB	00H, '.', 00H, 'X', 00H, '.', 00H, '.', 00H, '.', 00H, 'X', 00H
	DB	'.', 00H, '.', 00H, 'X', 00H, 'X', 00H, '.', 00H, '.', 00H, '.'
	DB	00H, '.', 00H, '.', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@MAAFJCMK@?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@
CONST	SEGMENT
??_C@_1CC@MAAFJCMK@?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@ DB '.'
	DB	00H, 'X', 00H, '.', 00H, '.', 00H, '.', 00H, 'X', 00H, '.', 00H
	DB	'.', 00H, '.', 00H, 'X', 00H, 'X', 00H, '.', 00H, '.', 00H, '.'
	DB	00H, '.', 00H, '.', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@NFCFOJPC@?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@
CONST	SEGMENT
??_C@_1CC@NFCFOJPC@?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@ DB '.'
	DB	00H, 'X', 00H, '.', 00H, '.', 00H, '.', 00H, 'X', 00H, 'X', 00H
	DB	'.', 00H, '.', 00H, '.', 00H, 'X', 00H, '.', 00H, '.', 00H, '.'
	DB	00H, '.', 00H, '.', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@FAAJCMCD@?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AA?4?$AA?4@
CONST	SEGMENT
??_C@_1CC@FAAJCMCD@?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AA?4?$AA?4@ DB '.'
	DB	00H, '.', 00H, 'X', 00H, '.', 00H, '.', 00H, 'X', 00H, 'X', 00H
	DB	'.', 00H, '.', 00H, 'X', 00H, '.', 00H, '.', 00H, '.', 00H, '.'
	DB	00H, '.', 00H, '.', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@ECBDCMKP@?$AA?4?$AA?4?$AA?4?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@
CONST	SEGMENT
??_C@_1CC@ECBDCMKP@?$AA?4?$AA?4?$AA?4?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@ DB '.'
	DB	00H, '.', 00H, '.', 00H, '.', 00H, '.', 00H, 'X', 00H, 'X', 00H
	DB	'.', 00H, '.', 00H, 'X', 00H, 'X', 00H, '.', 00H, '.', 00H, '.'
	DB	00H, '.', 00H, '.', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@MOFDAOCN@?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@
CONST	SEGMENT
??_C@_1CC@MOFDAOCN@?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@ DB '.'
	DB	00H, '.', 00H, 'X', 00H, '.', 00H, '.', 00H, 'X', 00H, 'X', 00H
	DB	'.', 00H, '.', 00H, '.', 00H, 'X', 00H, '.', 00H, '.', 00H, '.'
	DB	00H, '.', 00H, '.', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@EHEMJFD@?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX@
CONST	SEGMENT
??_C@_1CC@EHEMJFD@?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX@ DB '.'
	DB	00H, '.', 00H, 'X', 00H, '.', 00H, '.', 00H, '.', 00H, 'X', 00H
	DB	'.', 00H, '.', 00H, '.', 00H, 'X', 00H, '.', 00H, '.', 00H, '.'
	DB	00H, 'X', 00H, '.', 00H, 00H, 00H		; `string'
CONST	ENDS
PUBLIC	??$_Copy_memmove@PAHPAH@std@@YAPAHPAH00@Z	; std::_Copy_memmove<int *,int *>
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,void>
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,void>
PUBLIC	??$?M_JU?$ratio@$00$0DOI@@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@0@Z ; std::chrono::operator<<__int64,std::ratio<1,1000>,__int64,std::ratio<1,1000> >
PUBLIC	?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QBE_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000> >::count
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QAE@AB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000> >::duration<__int64,std::ratio<1,1000> ><__int64,void>
PUBLIC	??$_Seek_wrapped@H@std@@YAXAAPAHQAH@Z		; std::_Seek_wrapped<int>
PUBLIC	??$_Uninitialized_move_al_unchecked@HHV?$allocator@H@std@@@std@@YAPAHQAH00AAV?$allocator@H@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_move_al_unchecked<int,int,std::allocator<int> >
PUBLIC	??$_Ptr_move_cat@HH@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAH0@Z ; std::_Ptr_move_cat<int,int>
PUBLIC	??$_Get_unwrapped_n@HH$0A@@std@@YAPAHQAHH@Z	; std::_Get_unwrapped_n<int,int,0>
PUBLIC	??$_Idl_distance1@PAHPAH@std@@YAHABQAH0Urandom_access_iterator_tag@0@@Z ; std::_Idl_distance1<int *,int *>
PUBLIC	??$_Get_unwrapped@H@std@@YAPAHQAH@Z		; std::_Get_unwrapped<int>
PUBLIC	??$forward@ABQA_W@std@@YAABQA_WABQA_W@Z		; std::forward<wchar_t * const &>
PUBLIC	??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAE@ABV?$duration@_JU?$ratio@$00$00@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,void>
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAE@AB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,void>
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000>,void>
PUBLIC	??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAE@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,void>
PUBLIC	??$?N_JU?$ratio@$00$0DOI@@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@0@Z ; std::chrono::operator<=<__int64,std::ratio<1,1000>,__int64,std::ratio<1,1000> >
PUBLIC	?zero@?$duration_values@_J@chrono@std@@SA_JXZ	; std::chrono::duration_values<__int64>::zero
PUBLIC	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBE_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
PUBLIC	??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAEAAV012@ABV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=
PUBLIC	??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAEAAV012@ABV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=
PUBLIC	?zero@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@SA?AV123@XZ ; std::chrono::duration<__int64,std::ratio<1,1000> >::zero
PUBLIC	?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QBE_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
PUBLIC	??$_Get_size_of_n@$01@std@@YAII@Z		; std::_Get_size_of_n<2>
PUBLIC	??$_Get_size_of_n@$03@std@@YAII@Z		; std::_Get_size_of_n<4>
PUBLIC	??$_Idl_distance@PAHPAH@std@@YAHABQAH0@Z	; std::_Idl_distance<int *,int *>
PUBLIC	??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHQAH0PAHAAV?$allocator@H@0@@Z ; std::_Uninitialized_move<int *,int *,std::allocator<int> >
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$construct@PA_WABQA_W@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@QAPA_WABQA_W@Z ; std::_Default_allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * const &>
PUBLIC	??$_Destroy_range1@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<int> >
PUBLIC	??$_To_xtime@_JU?$ratio@$00$0DOI@@std@@@std@@YA?AUxtime@@ABV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@0@@Z ; std::_To_xtime<__int64,std::ratio<1,1000> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QBEABV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$allocator@_W@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
PUBLIC	?_Umove_if_noexcept1@?$vector@HV?$allocator@H@std@@@std@@AAEXPAH00U?$integral_constant@_N$00@2@@Z ; std::vector<int,std::allocator<int> >::_Umove_if_noexcept1
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABV?$allocator@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Getal
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAIABV?$allocator@H@2@@Z ; std::_Default_allocator_traits<std::allocator<int> >::max_size
PUBLIC	??0?$allocator@_W@std@@QAE@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	?allocate@?$allocator@_W@std@@QAEPA_WI@Z	; std::allocator<wchar_t>::allocate
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
PUBLIC	?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEII@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
PUBLIC	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
PUBLIC	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
PUBLIC	??0?$allocator@H@std@@QAE@XZ			; std::allocator<int>::allocator<int>
PUBLIC	?allocate@?$allocator@H@std@@QAEPAHI@Z		; std::allocator<int>::allocate
PUBLIC	?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::size
PUBLIC	?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::max_size
PUBLIC	?_Umove@?$vector@HV?$allocator@H@std@@@std@@AAEPAHPAH00@Z ; std::vector<int,std::allocator<int> >::_Umove
PUBLIC	?_Umove_if_noexcept@?$vector@HV?$allocator@H@std@@@std@@AAEXPAH00@Z ; std::vector<int,std::allocator<int> >::_Umove_if_noexcept
PUBLIC	?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@ABEII@Z ; std::vector<int,std::allocator<int> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AAEXQAHII@Z ; std::vector<int,std::allocator<int> >::_Change_array
PUBLIC	?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ; std::vector<int,std::allocator<int> >::_Xlength
PUBLIC	??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >
PUBLIC	??$_Reallocate_for@V<lambda_03628ca18370b1f44a99b655e704819b>@@PB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@IV<lambda_03628ca18370b1f44a99b655e704819b>@@PB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_03628ca18370b1f44a99b655e704819b>,wchar_t const *>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$destroy@PA_W@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@QAPA_W@Z ; std::_Default_allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
PUBLIC	??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z		; std::addressof<wchar_t *>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>
PUBLIC	??$_Unfancy@_W@std@@YAPA_WPA_W@Z		; std::_Unfancy<wchar_t>
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><>
PUBLIC	??$_Emplace_reallocate@H@?$vector@HV?$allocator@H@std@@@std@@QAEPAHQAH$$QAH@Z ; std::vector<int,std::allocator<int> >::_Emplace_reallocate<int>
PUBLIC	??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAAV?$allocator@H@1@QAH$$QAH@Z ; std::_Default_allocator_traits<std::allocator<int> >::construct<int,int>
PUBLIC	??$_Unfancy@H@std@@YAPAHPAH@Z			; std::_Unfancy<int>
PUBLIC	??$forward@H@std@@YA$$QAHAAH@Z			; std::forward<int>
PUBLIC	??$move@AAH@std@@YA$$QAHAAH@Z			; std::move<int &>
PUBLIC	??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXABV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z ; std::this_thread::sleep_for<__int64,std::ratio<1,1000> >
PUBLIC	??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QAE@ABH@Z ; std::chrono::duration<__int64,std::ratio<1,1000> >::duration<__int64,std::ratio<1,1000> ><int,void>
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAE@AB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QAE@AB_J@Z ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,void>
PUBLIC	??$_Min_value@I@std@@YAABIABI0@Z		; std::_Min_value<unsigned int>
PUBLIC	?move@?$_WChar_traits@_W@std@@SAPA_WQA_WQB_WI@Z	; std::_WChar_traits<wchar_t>::move
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@H@std@@@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@H@std@@@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_second
PUBLIC	?length@?$_WChar_traits@_W@std@@SAIPB_W@Z	; std::_WChar_traits<wchar_t>::length
PUBLIC	?assign@?$_WChar_traits@_W@std@@SAXAA_WAB_W@Z	; std::_WChar_traits<wchar_t>::assign
PUBLIC	?deallocate@?$allocator@_W@std@@QAEXQA_WI@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	??R<lambda_03628ca18370b1f44a99b655e704819b>@@QBEXQA_WIQB_W@Z ; <lambda_03628ca18370b1f44a99b655e704819b>::operator()
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$allocator@_W@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	?deallocate@?$allocator@H@std@@QAEXQAHI@Z	; std::allocator<int>::deallocate
PUBLIC	?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ; std::vector<int,std::allocator<int> >::capacity
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@H@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@H@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Get_data
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAHXZ ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABQAHXZ ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Myend
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QAEAAV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
PUBLIC	?copy@?$_WChar_traits@_W@std@@SAPA_WQA_WQB_WI@Z	; std::_WChar_traits<wchar_t>::copy
PUBLIC	??$_Max_value@I@std@@YAABIABI0@Z		; std::_Max_value<unsigned int>
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
PUBLIC	??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
PUBLIC	?_Has_unused_capacity@?$vector@HV?$allocator@H@std@@@std@@ABE_NXZ ; std::vector<int,std::allocator<int> >::_Has_unused_capacity
PUBLIC	?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AAEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy
PUBLIC	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AAEXXZ ; std::vector<int,std::allocator<int> >::_Tidy
PUBLIC	?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@ABEXPAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$allocator@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Getal
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAHXZ ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABQAHXZ ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAHXZ ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABQAHXZ ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Mylast
PUBLIC	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
PUBLIC	??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>
PUBLIC	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
PUBLIC	??A?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAA_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator[]
PUBLIC	?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QBE_JXZ ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
PUBLIC	??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QAE@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >
PUBLIC	?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QBE?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch
PUBLIC	??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
PUBLIC	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
PUBLIC	??$_Emplace_back_with_unused_capacity@H@?$vector@HV?$allocator@H@std@@@std@@AAEX$$QAH@Z ; std::vector<int,std::allocator<int> >::_Emplace_back_with_unused_capacity<int>
PUBLIC	??$emplace_back@H@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z ; std::vector<int,std::allocator<int> >::emplace_back<int>
PUBLIC	?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z ; std::vector<int,std::allocator<int> >::push_back
PUBLIC	?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ ; std::vector<int,std::allocator<int> >::clear
PUBLIC	?_Unchecked_begin@?$vector@HV?$allocator@H@std@@@std@@QAEPAHXZ ; std::vector<int,std::allocator<int> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@HV?$allocator@H@std@@@std@@QAEPAHXZ ; std::vector<int,std::allocator<int> >::_Unchecked_end
PUBLIC	?empty@?$vector@HV?$allocator@H@std@@@std@@QBE_NXZ ; std::vector<int,std::allocator<int> >::empty
PUBLIC	?__autoclassinit2@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z ; std::vector<int,std::allocator<int> >::__autoclassinit2
PUBLIC	_main
PUBLIC	?DoesPieceFit@@YA_NHHHH@Z			; DoesPieceFit
PUBLIC	?Rotate@@YAHHHH@Z				; Rotate
PUBLIC	?sleep_until@this_thread@std@@YAXPBUxtime@@@Z	; std::this_thread::sleep_until
PUBLIC	?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ ; std::chrono::system_clock::now
PUBLIC	??$_Convert_size@I@std@@YAII@Z			; std::_Convert_size<unsigned int>
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Orphan_all@_Container_base0@std@@QAEXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	?max@?$numeric_limits@H@std@@SAHXZ		; std::numeric_limits<int>::max
PUBLIC	_wmemmove
PUBLIC	_wmemcpy
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?tetromino@@3PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; tetromino
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__alldiv:PROC
EXTRN	__allmul:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	___security_cookie:DWORD
?tetromino@@3PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A DB 0a8H DUP (?) ; tetromino
_BSS	ENDS
CRT$XCU	SEGMENT
?tetromino$initializer$@@3P6AXXZA DD FLAT:??__Etetromino@@YAXXZ ; tetromino$initializer$
CRT$XCU	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$_main DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$_main
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$_main DD 0ffffffffH
	DD	FLAT:__unwindfunclet$_main$0
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; __Size$dead$ = ecx
; __Where$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_new.h
; Line 187
	mov	eax, edx
; Line 188
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__N$ = 8						; size = 4
_wmemcpy PROC						; COMDAT
; __S1$ = ecx
; __S2$ = edx
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
; Line 230
	push	ebp
	mov	ebp, esp
; Line 233
	mov	eax, DWORD PTR __N$[ebp]
	add	eax, eax
	push	eax
	push	edx
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 235
	pop	ebp
	ret	0
_wmemcpy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _wmemmove
_TEXT	SEGMENT
__N$ = 8						; size = 4
_wmemmove PROC						; COMDAT
; __S1$ = ecx
; __S2$ = edx
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
; Line 243
	push	ebp
	mov	ebp, esp
; Line 246
	mov	eax, DWORD PTR __N$[ebp]
	add	eax, eax
	push	eax
	push	edx
	push	ecx
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 248
	pop	ebp
	ret	0
_wmemmove ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?max@?$numeric_limits@H@std@@SAHXZ
_TEXT	SEGMENT
?max@?$numeric_limits@H@std@@SAHXZ PROC			; std::numeric_limits<int>::max, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\limits
; Line 617
	mov	eax, 2147483647				; 7fffffffH
; Line 618
	ret	0
?max@?$numeric_limits@H@std@@SAHXZ ENDP			; std::numeric_limits<int>::max
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Orphan_all@_Container_base0@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@_Container_base0@std@@QAEXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT
; _this$dead$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 43
	ret	0
?_Orphan_all@_Container_base0@std@@QAEXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z
_TEXT	SEGMENT
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z PROC	; std::_Default_allocate_traits::_Allocate, COMDAT
; __Bytes$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 52
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
; Line 53
	ret	0
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ENDP	; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z
_TEXT	SEGMENT
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT
; __Ptr$ = ecx
; __Bytes$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 115
	add	DWORD PTR [edx], 35			; 00000023H
; Line 118
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax-4]
; Line 131
	sub	eax, edx
; Line 132
	add	eax, -4					; fffffffcH
	cmp	eax, 31					; 0000001fH
	ja	SHORT $LN7@Adjust_man
; Line 133
	mov	DWORD PTR [ecx], edx
; Line 134
	ret	0
$LN7@Adjust_man:
; Line 132
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Convert_size@I@std@@YAII@Z
_TEXT	SEGMENT
??$_Convert_size@I@std@@YAII@Z PROC			; std::_Convert_size<unsigned int>, COMDAT
; __Len$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 1204
	mov	eax, ecx
; Line 1205
	ret	0
??$_Convert_size@I@std@@YAII@Z ENDP			; std::_Convert_size<unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ
_TEXT	SEGMENT
?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ PROC ; std::chrono::system_clock::now, COMDAT
; ___$ReturnUdt$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 774
	push	esi
	mov	esi, ecx
; Line 775
	call	DWORD PTR __imp___Xtime_get_ticks
; Line 210
	mov	DWORD PTR [esi], eax
; Line 775
	mov	eax, esi
; Line 210
	mov	DWORD PTR [esi+4], edx
; Line 776
	pop	esi
	ret	0
?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ ENDP ; std::chrono::system_clock::now
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?sleep_until@this_thread@std@@YAXPBUxtime@@@Z
_TEXT	SEGMENT
?sleep_until@this_thread@std@@YAXPBUxtime@@@Z PROC	; std::this_thread::sleep_until, COMDAT
; __Abs_time$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\thread
; Line 128
	push	ecx
	call	DWORD PTR __imp___Thrd_sleep
	pop	ecx
; Line 129
	ret	0
?sleep_until@this_thread@std@@YAXPBUxtime@@@Z ENDP	; std::this_thread::sleep_until
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Etetromino@@YAXXZ
text$di	SEGMENT
??__Etetromino@@YAXXZ PROC				; `dynamic initializer for 'tetromino'', COMDAT
; File d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
; Line 9
	push	OFFSET ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	push	OFFSET ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	push	7
	push	24					; 00000018H
	push	OFFSET ?tetromino@@3PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; tetromino
	call	??_L@YGXPAXIIP6EX0@Z1@Z
	push	OFFSET ??__Ftetromino@@YAXXZ		; `dynamic atexit destructor for 'tetromino''
	call	_atexit
	pop	ecx
	ret	0
??__Etetromino@@YAXXZ ENDP				; `dynamic initializer for 'tetromino''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Ftetromino@@YAXXZ
text$yd	SEGMENT
??__Ftetromino@@YAXXZ PROC				; `dynamic atexit destructor for 'tetromino'', COMDAT
	push	OFFSET ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	push	7
	push	24					; 00000018H
	push	OFFSET ?tetromino@@3PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; tetromino
	call	??_M@YGXPAXIIP6EX0@Z@Z
	ret	0
??__Ftetromino@@YAXXZ ENDP				; `dynamic atexit destructor for 'tetromino''
text$yd	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Rotate@@YAHHHH@Z
_TEXT	SEGMENT
_rt$ = 8						; size = 4
?Rotate@@YAHHHH@Z PROC					; Rotate, COMDAT
; _px$ = ecx
; _py$ = edx
; File d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
; Line 18
	push	ebp
	mov	ebp, esp
; Line 19
	mov	eax, DWORD PTR _rt$[ebp]
	push	esi
	mov	esi, ecx
	and	eax, -2147483645			; 80000003H
	jns	SHORT $LN9@Rotate
	dec	eax
	or	eax, -4					; fffffffcH
	inc	eax
$LN9@Rotate:
	cmp	eax, 3
	ja	SHORT $LN2@Rotate
	jmp	DWORD PTR $LN11@Rotate[eax*4]
$LN4@Rotate:
; Line 21
	lea	eax, DWORD PTR [esi+edx*4]
	pop	esi
; Line 27
	pop	ebp
	ret	0
$LN5@Rotate:
; Line 22
	mov	eax, 3
	sub	eax, esi
	pop	esi
	lea	eax, DWORD PTR [edx+eax*4]
; Line 27
	pop	ebp
	ret	0
$LN6@Rotate:
; Line 23
	lea	ecx, DWORD PTR [edx*4]
	mov	eax, 15					; 0000000fH
	sub	eax, ecx
	sub	eax, esi
	pop	esi
; Line 27
	pop	ebp
	ret	0
$LN7@Rotate:
; Line 24
	lea	eax, DWORD PTR [esi*4]
	sub	eax, edx
	add	eax, 3
	pop	esi
; Line 27
	pop	ebp
	ret	0
$LN2@Rotate:
; Line 26
	xor	eax, eax
	pop	esi
; Line 27
	pop	ebp
	ret	0
	npad	1
$LN11@Rotate:
	DD	$LN4@Rotate
	DD	$LN5@Rotate
	DD	$LN6@Rotate
	DD	$LN7@Rotate
?Rotate@@YAHHHH@Z ENDP					; Rotate
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?DoesPieceFit@@YA_NHHHH@Z
_TEXT	SEGMENT
_nTetromino$1$ = -32					; size = 4
_nRotation$1$ = -28					; size = 4
tv531 = -24						; size = 4
tv530 = -20						; size = 4
tv533 = -16						; size = 4
tv529 = -12						; size = 4
tv532 = -8						; size = 4
_px$1$ = -4						; size = 4
_nPosX$ = 8						; size = 4
_nPosY$ = 12						; size = 4
?DoesPieceFit@@YA_NHHHH@Z PROC				; DoesPieceFit, COMDAT
; _nTetromino$ = ecx
; _nRotation$ = edx
; File d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
; Line 29
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _nTetromino$1$[ebp], ecx
; Line 30
	mov	DWORD PTR _px$1$[ebp], 0
	push	ebx
	push	esi
	push	edi
	and	edx, -2147483645			; 80000003H
	jns	SHORT $LN45@DoesPieceF
	dec	edx
	or	edx, -4					; fffffffcH
	inc	edx
$LN45@DoesPieceF:
	mov	eax, DWORD PTR ?pField@@3PAEA		; pField
	mov	ebx, 15					; 0000000fH
	mov	esi, DWORD PTR _nPosY$[ebp]
	mov	DWORD PTR _nRotation$1$[ebp], edx
	mov	DWORD PTR tv532[ebp], 0
	mov	DWORD PTR tv530[ebp], ebx
	lea	esi, DWORD PTR [eax+esi*8]
	mov	DWORD PTR tv529[ebp], 12		; 0000000cH
	add	esi, DWORD PTR _nPosX$[ebp]
	xor	eax, eax
	mov	DWORD PTR tv531[ebp], esi
	npad	4
$LL4@DoesPieceF:
; Line 31
	xor	ecx, ecx
	mov	DWORD PTR tv533[ebp], esi
	mov	edi, eax
$LL7@DoesPieceF:
; Line 19
	cmp	edx, 3
	ja	SHORT $LN12@DoesPieceF
	jmp	DWORD PTR $LN47@DoesPieceF[edx*4]
$LN14@DoesPieceF:
; Line 21
	mov	edx, edi
	jmp	SHORT $LN11@DoesPieceF
$LN15@DoesPieceF:
; Line 22
	mov	edx, DWORD PTR tv529[ebp]
	add	edx, ecx
	jmp	SHORT $LN11@DoesPieceF
$LN16@DoesPieceF:
; Line 23
	mov	edx, ebx
	jmp	SHORT $LN11@DoesPieceF
$LN17@DoesPieceF:
; Line 24
	mov	edx, DWORD PTR tv532[ebp]
	sub	edx, ecx
	add	edx, 3
	jmp	SHORT $LN11@DoesPieceF
$LN12@DoesPieceF:
; Line 26
	xor	edx, edx
$LN11@DoesPieceF:
; Line 35
	add	eax, DWORD PTR _nPosX$[ebp]
	mov	esi, DWORD PTR tv533[ebp]
	cmp	eax, 7
	ja	SHORT $LN5@DoesPieceF
	mov	eax, DWORD PTR _nPosY$[ebp]
	add	eax, ecx
	cmp	eax, 17					; 00000011H
	ja	SHORT $LN5@DoesPieceF
; Line 36
	mov	eax, DWORD PTR _nTetromino$1$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1825
	cmp	DWORD PTR ?tetromino@@3PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A[eax*8+20], 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 302
	lea	eax, DWORD PTR ?tetromino@@3PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A[eax*8]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1804
	jb	SHORT $LN26@DoesPieceF
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
; Line 346
	mov	eax, DWORD PTR [eax]
$LN26@DoesPieceF:
; File d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
; Line 36
	cmp	WORD PTR [eax+edx*2], 88		; 00000058H
	jne	SHORT $LN5@DoesPieceF
	cmp	BYTE PTR [esi], 0
	jne	SHORT $LN34@DoesPieceF
$LN5@DoesPieceF:
; Line 31
	mov	edx, DWORD PTR _nRotation$1$[ebp]
	inc	ecx
	mov	eax, DWORD PTR _px$1$[ebp]
	add	esi, 8
	add	edi, 4
	mov	DWORD PTR tv533[ebp], esi
	sub	ebx, 4
	cmp	ecx, 4
	jl	SHORT $LL7@DoesPieceF
; Line 30
	mov	ecx, DWORD PTR tv529[ebp]
	inc	eax
	mov	ebx, DWORD PTR tv530[ebp]
	sub	ecx, 4
	mov	esi, DWORD PTR tv531[ebp]
	dec	ebx
	add	DWORD PTR tv532[ebp], 4
	inc	esi
	mov	DWORD PTR _px$1$[ebp], eax
	mov	DWORD PTR tv530[ebp], ebx
	mov	DWORD PTR tv531[ebp], esi
	mov	DWORD PTR tv529[ebp], ecx
	cmp	ecx, -4					; fffffffcH
	jle	SHORT $LN42@DoesPieceF
	jmp	$LL4@DoesPieceF
$LN34@DoesPieceF:
	pop	edi
; Line 40
	pop	esi
	xor	al, al
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN42@DoesPieceF:
	pop	edi
	pop	esi
	mov	al, 1
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN47@DoesPieceF:
	DD	$LN14@DoesPieceF
	DD	$LN15@DoesPieceF
	DD	$LN16@DoesPieceF
	DD	$LN17@DoesPieceF
?DoesPieceFit@@YA_NHHHH@Z ENDP				; DoesPieceFit
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _main
_TEXT	SEGMENT
$T59 = -128						; size = 8
$T11 = -120						; size = 8
tv4052 = -112						; size = 4
_hConsole$1$ = -108					; size = 4
_px$1$ = -104						; size = 4
tv4051 = -100						; size = 4
__Bytes$1$ = -96					; size = 4
_screen$1$ = -92					; size = 4
_nSpeedCounter$1$ = -88					; size = 4
_bKey$ = -84						; size = 4
$T83 = -80						; size = 4
__Ptr$1$ = -76						; size = 4
_px$1$ = -76						; size = 4
tv4068 = -72						; size = 4
tv4043 = -72						; size = 4
tv4065 = -68						; size = 4
tv4046 = -68						; size = 4
tv4072 = -64						; size = 4
tv4048 = -64						; size = 4
_<begin>$L0$1$ = -60					; size = 4
tv4076 = -60						; size = 4
tv4060 = -60						; size = 4
$T14 = -60						; size = 4
tv4066 = -56						; size = 4
tv4054 = -56						; size = 4
tv4045 = -56						; size = 4
tv4064 = -52						; size = 4
_nCurrentX$1$ = -52					; size = 4
_nCurrentRotation$1$ = -48				; size = 4
_nCurrentPiece$1$ = -44					; size = 4
_bGameOver$1$ = -38					; size = 1
_bRotateHold$1$ = -37					; size = 1
_nCurrentY$1$ = -36					; size = 4
_dwBytesWritten$ = -32					; size = 4
_vLines$ = -28						; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_main	PROC						; COMDAT
; File d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
; Line 43
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$_main
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 116				; 00000074H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 44
	push	4980					; 00001374H
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	edx, eax
	mov	eax, 2097184				; 00200020H
	mov	DWORD PTR _screen$1$[ebp], edx
	mov	edi, edx
	mov	ecx, 1245				; 000004ddH
	rep stosd
; Line 46
	push	0
	push	1
	push	0
	push	0
	push	-1073741824				; c0000000H
	call	DWORD PTR __imp__CreateConsoleScreenBuffer@20
; Line 47
	push	eax
	mov	DWORD PTR _hConsole$1$[ebp], eax
	call	DWORD PTR __imp__SetConsoleActiveScreenBuffer@4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2676
	push	16					; 00000010H
	push	OFFSET ??_C@_1CC@EHEMJFD@?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX@
	mov	ecx, OFFSET ?tetromino@@3PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A ; tetromino
; File d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
; Line 48
	mov	DWORD PTR _dwBytesWritten$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2676
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	push	16					; 00000010H
	push	OFFSET ??_C@_1CC@MOFDAOCN@?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@
	mov	ecx, OFFSET ?tetromino@@3PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+24
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	push	16					; 00000010H
	push	OFFSET ??_C@_1CC@ECBDCMKP@?$AA?4?$AA?4?$AA?4?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@
	mov	ecx, OFFSET ?tetromino@@3PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+48
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	push	16					; 00000010H
	push	OFFSET ??_C@_1CC@FAAJCMCD@?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AA?4?$AA?4@
	mov	ecx, OFFSET ?tetromino@@3PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+72
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	push	16					; 00000010H
	push	OFFSET ??_C@_1CC@NFCFOJPC@?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@
	mov	ecx, OFFSET ?tetromino@@3PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+96
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	push	16					; 00000010H
	push	OFFSET ??_C@_1CC@MAAFJCMK@?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@
	mov	ecx, OFFSET ?tetromino@@3PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+120
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	push	16					; 00000010H
	push	OFFSET ??_C@_1CC@FFPIPNHC@?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AA?4?$AAX?$AA?4?$AA?4?$AAX?$AAX?$AA?4?$AA?4?$AA?4?$AA?4@
	mov	ecx, OFFSET ?tetromino@@3PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A+144
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; File d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
; Line 57
	push	144					; 00000090H
	call	??_U@YAPAXI@Z				; operator new[]
	mov	edi, eax
	add	esp, 4
	mov	DWORD PTR ?pField@@3PAEA, edi		; pField
	xor	esi, esi
	npad	3
$LL7@main:
; Line 60
	xor	ecx, ecx
	lea	edx, DWORD PTR [edi+esi]
$LL10@main:
; Line 61
	test	esi, esi
	je	SHORT $LN63@main
	cmp	esi, 7
	je	SHORT $LN63@main
	cmp	ecx, 17					; 00000011H
	je	SHORT $LN63@main
	xor	al, al
	jmp	SHORT $LN64@main
$LN63@main:
	mov	al, 9
$LN64@main:
	mov	BYTE PTR [edx], al
	inc	ecx
	add	edx, 8
	cmp	ecx, 18					; 00000012H
	jl	SHORT $LL10@main
; Line 59
	inc	esi
	cmp	esi, 8
	jl	SHORT $LL7@main
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 389
	xor	eax, eax
; File d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
; Line 63
	mov	BYTE PTR _bGameOver$1$[ebp], 0
	xorps	xmm0, xmm0
; Line 64
	mov	DWORD PTR _nCurrentPiece$1$[ebp], 3
	movq	QWORD PTR _vLines$[ebp], xmm0
; Line 66
	mov	ebx, 4
	mov	DWORD PTR _nCurrentRotation$1$[ebp], 0
; Line 71
	xor	edi, edi
	mov	DWORD PTR _nCurrentY$1$[ebp], 0
	mov	BYTE PTR _bRotateHold$1$[ebp], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 389
	mov	DWORD PTR __Ptr$1$[ebp], eax
	mov	DWORD PTR _vLines$[ebp], eax
; Line 390
	mov	DWORD PTR _vLines$[ebp+4], eax
; Line 391
	mov	DWORD PTR __Bytes$1$[ebp], eax
	mov	DWORD PTR _vLines$[ebp+8], eax
; File d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
; Line 73
	mov	DWORD PTR __$EHRec$[ebp+8], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 88
	mov	DWORD PTR $T11[ebp+4], eax
	mov	eax, DWORD PTR _screen$1$[ebp]
	add	eax, 502				; 000001f6H
	mov	DWORD PTR $T11[ebp], 70			; 00000046H
	mov	DWORD PTR tv4052[ebp], eax
; File d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
; Line 175
	xor	eax, eax
	mov	DWORD PTR $T83[ebp], eax
	jmp	SHORT $LN11@main
	npad	10
$LL814@main:
; Line 74
	mov	edi, DWORD PTR _nSpeedCounter$1$[ebp]
$LN11@main:
; Line 77
	lea	ecx, DWORD PTR $T11[ebp]
	call	??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXABV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z ; std::this_thread::sleep_for<__int64,std::ratio<1,1000> >
; Line 78
	inc	edi
	mov	DWORD PTR _nSpeedCounter$1$[ebp], edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 88
	xor	edi, edi
$LL15@main:
; File d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
; Line 84
	movzx	eax, BYTE PTR ??_C@_04KLNKAGHM@?8?$CF?$CIZ@[edi]
	push	eax
	call	DWORD PTR __imp__GetAsyncKeyState@4
	shr	eax, 15					; 0000000fH
	and	al, 1
	mov	BYTE PTR _bKey$[ebp+edi], al
	inc	edi
	cmp	edi, 4
	jl	SHORT $LL15@main
; Line 88
	cmp	BYTE PTR _bKey$[ebp], 0
	mov	edi, DWORD PTR _nCurrentRotation$1$[ebp]
	je	SHORT $LN65@main
	push	DWORD PTR _nCurrentY$1$[ebp]
	mov	ecx, DWORD PTR _nCurrentPiece$1$[ebp]
	lea	eax, DWORD PTR [ebx+1]
	push	eax
	mov	edx, edi
	call	?DoesPieceFit@@YA_NHHHH@Z		; DoesPieceFit
	add	esp, 8
	test	al, al
	je	SHORT $LN65@main
	mov	eax, 1
	jmp	SHORT $LN66@main
$LN65@main:
	xor	eax, eax
$LN66@main:
	add	ebx, eax
; Line 89
	cmp	BYTE PTR _bKey$[ebp+1], 0
	je	SHORT $LN67@main
	push	DWORD PTR _nCurrentY$1$[ebp]
	mov	ecx, DWORD PTR _nCurrentPiece$1$[ebp]
	lea	eax, DWORD PTR [ebx-1]
	push	eax
	mov	edx, edi
	call	?DoesPieceFit@@YA_NHHHH@Z		; DoesPieceFit
	add	esp, 8
	test	al, al
	je	SHORT $LN67@main
	mov	eax, 1
	jmp	SHORT $LN68@main
$LN67@main:
	xor	eax, eax
$LN68@main:
	sub	ebx, eax
; Line 90
	cmp	BYTE PTR _bKey$[ebp+2], 0
	mov	DWORD PTR _nCurrentX$1$[ebp], ebx
	je	SHORT $LN69@main
	mov	eax, DWORD PTR _nCurrentY$1$[ebp]
	mov	edx, edi
	mov	ecx, DWORD PTR _nCurrentPiece$1$[ebp]
	inc	eax
	push	eax
	push	ebx
	call	?DoesPieceFit@@YA_NHHHH@Z		; DoesPieceFit
	add	esp, 8
	test	al, al
	je	SHORT $LN69@main
	mov	eax, 1
	jmp	SHORT $LN70@main
$LN69@main:
	xor	eax, eax
$LN70@main:
	mov	ecx, DWORD PTR _nCurrentY$1$[ebp]
	add	ecx, eax
; Line 94
	cmp	BYTE PTR _bKey$[ebp+3], 0
	mov	DWORD PTR _nCurrentY$1$[ebp], ecx
	je	SHORT $LN52@main
; Line 96
	cmp	BYTE PTR _bRotateHold$1$[ebp], 0
	jne	SHORT $LN71@main
	push	ecx
	mov	ecx, DWORD PTR _nCurrentPiece$1$[ebp]
	lea	edx, DWORD PTR [edi+1]
	push	ebx
	call	?DoesPieceFit@@YA_NHHHH@Z		; DoesPieceFit
	add	esp, 8
	test	al, al
	je	SHORT $LN71@main
; Line 99
	mov	ecx, DWORD PTR _nCurrentY$1$[ebp]
	mov	eax, 1
	add	edi, eax
	mov	BYTE PTR _bRotateHold$1$[ebp], al
	mov	DWORD PTR _nCurrentRotation$1$[ebp], edi
	jmp	SHORT $LN53@main
$LN71@main:
	mov	ecx, DWORD PTR _nCurrentY$1$[ebp]
	xor	eax, eax
	add	edi, eax
	mov	BYTE PTR _bRotateHold$1$[ebp], 1
	mov	DWORD PTR _nCurrentRotation$1$[ebp], edi
	jmp	SHORT $LN53@main
$LN52@main:
; Line 101
	mov	BYTE PTR _bRotateHold$1$[ebp], 0
$LN53@main:
; Line 104
	cmp	DWORD PTR _nSpeedCounter$1$[ebp], 20	; 00000014H
	jne	$LN56@main
; Line 108
	lea	edi, DWORD PTR [ecx+1]
	xor	eax, eax
	mov	ecx, DWORD PTR _nCurrentPiece$1$[ebp]
	push	edi
	push	ebx
	mov	ebx, DWORD PTR _nCurrentRotation$1$[ebp]
	mov	edx, ebx
	mov	DWORD PTR _nSpeedCounter$1$[ebp], eax
	call	?DoesPieceFit@@YA_NHHHH@Z		; DoesPieceFit
	add	esp, 8
	test	al, al
	je	SHORT $LN55@main
; Line 110
	mov	DWORD PTR _nCurrentY$1$[ebp], edi
; Line 112
	jmp	$LN56@main
$LN55@main:
; Line 115
	xor	esi, esi
	mov	DWORD PTR _px$1$[ebp], esi
	and	ebx, -2147483645			; 80000003H
	jns	SHORT $LN816@main
	dec	ebx
	or	ebx, -4					; fffffffcH
	inc	ebx
$LN816@main:
	mov	eax, DWORD PTR _nCurrentPiece$1$[ebp]
	mov	edi, DWORD PTR ?pField@@3PAEA		; pField
	mov	DWORD PTR _nCurrentRotation$1$[ebp], ebx
	mov	DWORD PTR tv4068[ebp], esi
	lea	eax, DWORD PTR [eax+eax*2]
	mov	DWORD PTR tv4065[ebp], 15		; 0000000fH
	lea	ebx, DWORD PTR ?tetromino@@3PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A[eax*8]
	mov	eax, DWORD PTR _nCurrentY$1$[ebp]
	shl	eax, 3
	add	edi, eax
	mov	DWORD PTR tv4060[ebp], eax
	add	edi, DWORD PTR _nCurrentX$1$[ebp]
	mov	DWORD PTR tv4066[ebp], edi
	mov	DWORD PTR tv4064[ebp], 12		; 0000000cH
$LL18@main:
; Line 116
	mov	DWORD PTR tv4072[ebp], esi
	xor	edx, edx
	mov	esi, DWORD PTR tv4065[ebp]
	npad	4
$LL21@main:
; Line 19
	cmp	DWORD PTR _nCurrentRotation$1$[ebp], 3
	mov	ecx, DWORD PTR tv4064[ebp]
	ja	SHORT $LN291@main
	mov	eax, DWORD PTR _nCurrentRotation$1$[ebp]
	jmp	DWORD PTR $LN820@main[eax*4]
$LN293@main:
; Line 21
	mov	ecx, DWORD PTR tv4072[ebp]
	jmp	SHORT $LN290@main
$LN294@main:
; Line 22
	add	ecx, edx
	jmp	SHORT $LN290@main
$LN295@main:
; Line 23
	mov	ecx, esi
	jmp	SHORT $LN290@main
$LN296@main:
; Line 24
	mov	ecx, DWORD PTR tv4068[ebp]
	sub	ecx, edx
	add	ecx, 3
	jmp	SHORT $LN290@main
$LN291@main:
; Line 26
	xor	ecx, ecx
$LN290@main:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1825
	cmp	DWORD PTR [ebx+20], 8
; Line 1803
	mov	eax, ebx
; Line 1804
	jb	SHORT $LN305@main
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
; Line 346
	mov	eax, DWORD PTR [ebx]
$LN305@main:
; File d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
; Line 117
	cmp	WORD PTR [eax+ecx*2], 88		; 00000058H
	jne	SHORT $LN19@main
; Line 118
	mov	al, BYTE PTR _nCurrentPiece$1$[ebp]
	inc	al
	mov	BYTE PTR [edi], al
$LN19@main:
; Line 116
	add	DWORD PTR tv4072[ebp], 4
	inc	edx
	add	edi, 8
	sub	esi, 4
	cmp	edx, 4
	jl	SHORT $LL21@main
; Line 115
	mov	ecx, DWORD PTR tv4064[ebp]
	mov	esi, DWORD PTR _px$1$[ebp]
	sub	ecx, 4
	mov	edi, DWORD PTR tv4066[ebp]
	inc	esi
	dec	DWORD PTR tv4065[ebp]
	inc	edi
	add	DWORD PTR tv4068[ebp], 4
	mov	DWORD PTR _px$1$[ebp], esi
	mov	DWORD PTR tv4066[ebp], edi
	mov	DWORD PTR tv4064[ebp], ecx
	cmp	ecx, -4					; fffffffcH
	jg	$LL18@main
; Line 120
	mov	ebx, DWORD PTR tv4060[ebp]
	mov	edi, 4
	mov	eax, DWORD PTR _nCurrentY$1$[ebp]
$LL24@main:
; Line 122
	cmp	eax, 17					; 00000011H
	jge	$LN22@main
; Line 126
	mov	eax, DWORD PTR ?pField@@3PAEA		; pField
	cmp	BYTE PTR [ebx+eax+2], 0
	setne	cl
	cmp	BYTE PTR [ebx+eax+1], 0
	setne	al
	xor	edx, edx
	and	cl, al
	movzx	eax, cl
	mov	ecx, DWORD PTR ?pField@@3PAEA		; pField
	cmp	BYTE PTR [ebx+ecx+3], dl
	cmovne	edx, eax
	cmp	BYTE PTR [ebx+ecx+4], 0
	setne	al
	xor	ecx, ecx
	and	dl, al
	movzx	eax, dl
	mov	edx, DWORD PTR ?pField@@3PAEA		; pField
	cmp	BYTE PTR [ebx+edx+5], cl
	cmovne	ecx, eax
	cmp	BYTE PTR [ebx+edx+6], 0
	setne	al
	and	cl, al
; Line 128
	je	SHORT $LN813@main
; Line 131
	mov	eax, 134744072				; 08080808H
	mov	DWORD PTR [ebx+edx+1], eax
	mov	WORD PTR [ebx+edx+5], ax
; Line 133
	mov	eax, DWORD PTR _nCurrentY$1$[ebp]
	mov	DWORD PTR $T14[ebp], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1726
	mov	eax, DWORD PTR _vLines$[ebp+4]
	cmp	DWORD PTR __Bytes$1$[ebp], eax
; Line 917
	je	SHORT $LN316@main
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 879
	mov	ecx, DWORD PTR _nCurrentY$1$[ebp]
	mov	DWORD PTR [eax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 905
	add	eax, 4
	mov	DWORD PTR _vLines$[ebp+4], eax
; Line 919
	jmp	SHORT $LN813@main
$LN316@main:
; Line 922
	lea	ecx, DWORD PTR $T14[ebp]
	push	ecx
	push	eax
	lea	ecx, DWORD PTR _vLines$[ebp]
	call	??$_Emplace_reallocate@H@?$vector@HV?$allocator@H@std@@@std@@QAEPAHQAH$$QAH@Z ; std::vector<int,std::allocator<int> >::_Emplace_reallocate<int>
	mov	eax, DWORD PTR _vLines$[ebp+8]
	mov	DWORD PTR __Bytes$1$[ebp], eax
$LN813@main:
; File d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
; Line 120
	mov	eax, DWORD PTR _nCurrentY$1$[ebp]
$LN22@main:
	inc	eax
	add	ebx, 8
	mov	DWORD PTR _nCurrentY$1$[ebp], eax
	sub	edi, 1
	jne	$LL24@main
; Line 138
	mov	DWORD PTR _nCurrentX$1$[ebp], 4
; Line 139
	mov	DWORD PTR _nCurrentY$1$[ebp], edi
; Line 140
	call	DWORD PTR __imp__rand
	cdq
	mov	ecx, 7
	idiv	ecx
; Line 143
	push	edi
	mov	eax, edx
	mov	DWORD PTR _nCurrentRotation$1$[ebp], edi
	push	4
	xor	edx, edx
	mov	DWORD PTR _nCurrentPiece$1$[ebp], eax
	mov	ecx, eax
	call	?DoesPieceFit@@YA_NHHHH@Z		; DoesPieceFit
	add	esp, 8
	xor	al, 1
	mov	BYTE PTR _bGameOver$1$[ebp], al
	mov	eax, DWORD PTR _vLines$[ebp]
	mov	DWORD PTR __Ptr$1$[ebp], eax
$LN56@main:
; Line 150
	mov	esi, DWORD PTR ?pField@@3PAEA		; pField
	xor	edi, edi
	mov	eax, DWORD PTR tv4052[ebp]
	add	esi, 16					; 00000010H
	mov	DWORD PTR tv4054[ebp], eax
	npad	6
$LL33@main:
; Line 151
	lea	ecx, DWORD PTR [esi+edi]
	mov	edx, eax
	mov	ebx, 3
	npad	6
$LL36@main:
; Line 153
	movzx	eax, BYTE PTR [ecx-16]
	lea	ecx, DWORD PTR [ecx+48]
	lea	edx, DWORD PTR [edx+996]
	movzx	eax, WORD PTR ??_C@_1BG@HNHDAONN@?$AA?5?$AAA?$AAB?$AAC?$AAD?$AAE?$AAF?$AAG?$AA?$DN?$AA?$CD@[eax*2]
	mov	WORD PTR [edx-1162], ax
	movzx	eax, BYTE PTR [ecx-56]
	movzx	eax, WORD PTR ??_C@_1BG@HNHDAONN@?$AA?5?$AAA?$AAB?$AAC?$AAD?$AAE?$AAF?$AAG?$AA?$DN?$AA?$CD@[eax*2]
	mov	WORD PTR [edx-996], ax
	movzx	eax, BYTE PTR [ecx-48]
	movzx	eax, WORD PTR ??_C@_1BG@HNHDAONN@?$AA?5?$AAA?$AAB?$AAC?$AAD?$AAE?$AAF?$AAG?$AA?$DN?$AA?$CD@[eax*2]
	mov	WORD PTR [edx-830], ax
	movzx	eax, BYTE PTR [ecx-40]
	movzx	eax, WORD PTR ??_C@_1BG@HNHDAONN@?$AA?5?$AAA?$AAB?$AAC?$AAD?$AAE?$AAF?$AAG?$AA?$DN?$AA?$CD@[eax*2]
	mov	WORD PTR [edx-664], ax
	movzx	eax, BYTE PTR [ecx-32]
	movzx	eax, WORD PTR ??_C@_1BG@HNHDAONN@?$AA?5?$AAA?$AAB?$AAC?$AAD?$AAE?$AAF?$AAG?$AA?$DN?$AA?$CD@[eax*2]
	mov	WORD PTR [edx-498], ax
	movzx	eax, BYTE PTR [ecx-24]
	movzx	eax, WORD PTR ??_C@_1BG@HNHDAONN@?$AA?5?$AAA?$AAB?$AAC?$AAD?$AAE?$AAF?$AAG?$AA?$DN?$AA?$CD@[eax*2]
	mov	WORD PTR [edx-332], ax
	sub	ebx, 1
	jne	SHORT $LL36@main
; Line 150
	mov	eax, DWORD PTR tv4054[ebp]
	inc	edi
	add	eax, 2
	mov	DWORD PTR tv4054[ebp], eax
	cmp	edi, 8
	jl	$LL33@main
; Line 157
	mov	ecx, DWORD PTR _nCurrentRotation$1$[ebp]
	xor	edi, edi
	mov	DWORD PTR _px$1$[ebp], edi
	and	ecx, -2147483645			; 80000003H
	jns	SHORT $LN817@main
	dec	ecx
	or	ecx, -4					; fffffffcH
	inc	ecx
$LN817@main:
	mov	eax, DWORD PTR _nCurrentPiece$1$[ebp]
	mov	edx, DWORD PTR _screen$1$[ebp]
	mov	DWORD PTR tv4076[ebp], ecx
	mov	DWORD PTR tv4048[ebp], edi
	lea	eax, DWORD PTR [eax+eax*2]
	mov	DWORD PTR tv4046[ebp], 15		; 0000000fH
	lea	ebx, DWORD PTR ?tetromino@@3PAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@A[eax*8]
	mov	DWORD PTR tv4045[ebp], 12		; 0000000cH
	imul	eax, DWORD PTR _nCurrentY$1$[ebp], 83
	add	eax, DWORD PTR _nCurrentX$1$[ebp]
	add	edx, 336				; 00000150H
	lea	eax, DWORD PTR [edx+eax*2]
	mov	DWORD PTR tv4043[ebp], eax
	npad	1
$LL39@main:
; Line 158
	mov	esi, DWORD PTR tv4046[ebp]
	mov	eax, edi
	mov	edi, DWORD PTR tv4043[ebp]
	xor	edx, edx
	mov	DWORD PTR tv4051[ebp], eax
	npad	3
$LL42@main:
; Line 19
	cmp	ecx, 3
	ja	SHORT $LN391@main
	jmp	DWORD PTR $LN821@main[ecx*4]
$LN393@main:
; Line 21
	mov	ecx, eax
	jmp	SHORT $LN390@main
$LN394@main:
; Line 22
	mov	ecx, DWORD PTR tv4045[ebp]
	add	ecx, edx
	jmp	SHORT $LN390@main
$LN395@main:
; Line 23
	mov	ecx, esi
	jmp	SHORT $LN390@main
$LN396@main:
; Line 24
	mov	ecx, DWORD PTR tv4048[ebp]
	sub	ecx, edx
	add	ecx, 3
	jmp	SHORT $LN390@main
$LN391@main:
; Line 26
	xor	ecx, ecx
$LN390@main:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1825
	cmp	DWORD PTR [ebx+20], 8
; Line 1803
	mov	eax, ebx
; Line 1804
	jb	SHORT $LN405@main
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
; Line 346
	mov	eax, DWORD PTR [ebx]
$LN405@main:
; File d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
; Line 159
	cmp	WORD PTR [eax+ecx*2], 88		; 00000058H
	jne	SHORT $LN40@main
; Line 160
	mov	eax, DWORD PTR _nCurrentPiece$1$[ebp]
	add	eax, 65					; 00000041H
	mov	WORD PTR [edi], ax
$LN40@main:
; Line 158
	mov	eax, DWORD PTR tv4051[ebp]
	inc	edx
	mov	ecx, DWORD PTR tv4076[ebp]
	add	eax, 4
	add	edi, 166				; 000000a6H
	mov	DWORD PTR tv4051[ebp], eax
	sub	esi, 4
	cmp	edx, 4
	jl	SHORT $LL42@main
; Line 157
	mov	eax, DWORD PTR tv4045[ebp]
	mov	edi, DWORD PTR _px$1$[ebp]
	sub	eax, 4
	add	DWORD PTR tv4043[ebp], 2
	inc	edi
	dec	DWORD PTR tv4046[ebp]
	add	DWORD PTR tv4048[ebp], 4
	mov	esi, DWORD PTR $T83[ebp]
	mov	DWORD PTR _px$1$[ebp], edi
	mov	DWORD PTR tv4045[ebp], eax
	cmp	eax, -4					; fffffffcH
	jg	$LL39@main
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1699
	mov	edi, DWORD PTR __Ptr$1$[ebp]
	cmp	edi, DWORD PTR _vLines$[ebp+4]
; File d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
; Line 161
	je	SHORT $LN590@main
; Line 164
	lea	ecx, DWORD PTR $T59[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 88
	mov	DWORD PTR $T59[ebp], 400		; 00000190H
	mov	DWORD PTR $T59[ebp+4], 0
; File d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
; Line 164
	call	??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXABV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z ; std::this_thread::sleep_for<__int64,std::ratio<1,1000> >
	mov	ecx, DWORD PTR _vLines$[ebp+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 88
	mov	eax, edi
	mov	edi, DWORD PTR ?pField@@3PAEA		; pField
	mov	DWORD PTR _<begin>$L0$1$[ebp], eax
	npad	1
$LL45@main:
; File d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
; Line 165
	mov	ebx, DWORD PTR [eax]
; Line 166
	test	ebx, ebx
	jle	SHORT $LN43@main
; Line 165
	lea	esi, DWORD PTR [edi+1]
	lea	esi, DWORD PTR [esi+ebx*8]
	npad	4
$LL48@main:
; Line 167
	mov	edx, 1
	mov	eax, esi
$LL51@main:
; Line 169
	mov	cl, BYTE PTR [eax-8]
	lea	eax, DWORD PTR [eax+1]
	mov	BYTE PTR [eax-1], cl
; Line 170
	mov	BYTE PTR [edx+edi], 0
	inc	edx
	cmp	edx, 7
	jl	SHORT $LL51@main
; Line 166
	dec	ebx
	sub	esi, 8
	test	ebx, ebx
	jg	SHORT $LL48@main
	mov	eax, DWORD PTR _<begin>$L0$1$[ebp]
	mov	ecx, DWORD PTR _vLines$[ebp+4]
$LN43@main:
; Line 165
	add	eax, 4
	mov	DWORD PTR _<begin>$L0$1$[ebp], eax
	cmp	eax, ecx
	jne	SHORT $LL45@main
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1592
	mov	edi, DWORD PTR __Ptr$1$[ebp]
	mov	esi, DWORD PTR $T83[ebp]
	mov	DWORD PTR _vLines$[ebp+4], edi
$LN590@main:
; File d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
; Line 175
	lea	eax, DWORD PTR _dwBytesWritten$[ebp]
	push	eax
	push	esi
	push	2490					; 000009baH
	push	DWORD PTR _screen$1$[ebp]
	push	DWORD PTR _hConsole$1$[ebp]
	call	DWORD PTR __imp__WriteConsoleOutputCharacterW@20
	cmp	BYTE PTR _bGameOver$1$[ebp], 0
	mov	ebx, DWORD PTR _nCurrentX$1$[ebp]
	je	$LL814@main
; Line 178
	push	DWORD PTR _hConsole$1$[ebp]
	call	DWORD PTR __imp__CloseHandle@4
; Line 179
	push	OFFSET ??_C@_05PDJBBECF@pause@
	call	DWORD PTR __imp__system
	add	esp, 4
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1913
	test	edi, edi
	je	SHORT $LN636@main
; Line 1715
	mov	ecx, DWORD PTR __Bytes$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 992
	mov	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1715
	sub	ecx, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 992
	and	ecx, -4					; fffffffcH
; Line 201
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN712@main
; Line 118
	mov	edi, DWORD PTR [edi-4]
	add	ecx, 35					; 00000023H
	sub	eax, edi
; Line 132
	add	eax, -4					; fffffffcH
	cmp	eax, 31					; 0000001fH
	jbe	SHORT $LN712@main
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN712@main:
; Line 207
	push	ecx
	push	edi
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN636@main:
; File d:\visualstudiosourcecode\tetrisgame\tetrisgame\main.cpp
; Line 180
	xor	eax, eax
; Line 181
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN818@main:
	npad	3
$LN820@main:
	DD	$LN293@main
	DD	$LN294@main
	DD	$LN295@main
	DD	$LN296@main
$LN821@main:
	DD	$LN393@main
	DD	$LN394@main
	DD	$LN395@main
	DD	$LN396@main
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_main$0:
	lea	ecx, DWORD PTR _vLines$[ebp]
	jmp	??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
__ehhandler$_main:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$_main
	jmp	___CxxFrameHandler3
text$x	ENDS
_main	ENDP
; Function compile flags: /Ogtp
;	COMDAT ?__autoclassinit2@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_classSize$dead$ = 8					; size = 4
?__autoclassinit2@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z PROC ; std::vector<int,std::allocator<int> >::__autoclassinit2, COMDAT
; _this$ = ecx
	xorps	xmm0, xmm0
	movq	QWORD PTR [ecx], xmm0
	mov	DWORD PTR [ecx+8], 0
	ret	4
?__autoclassinit2@?$vector@HV?$allocator@H@std@@@std@@QAEXI@Z ENDP ; std::vector<int,std::allocator<int> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?empty@?$vector@HV?$allocator@H@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@HV?$allocator@H@std@@@std@@QBE_NXZ PROC	; std::vector<int,std::allocator<int> >::empty, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1699
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [ecx+4]
	sete	al
; Line 1700
	ret	0
?empty@?$vector@HV?$allocator@H@std@@@std@@QBE_NXZ ENDP	; std::vector<int,std::allocator<int> >::empty
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Unchecked_end@?$vector@HV?$allocator@H@std@@@std@@QAEPAHXZ
_TEXT	SEGMENT
?_Unchecked_end@?$vector@HV?$allocator@H@std@@@std@@QAEPAHXZ PROC ; std::vector<int,std::allocator<int> >::_Unchecked_end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1689
	mov	eax, DWORD PTR [ecx+4]
; Line 1690
	ret	0
?_Unchecked_end@?$vector@HV?$allocator@H@std@@@std@@QAEPAHXZ ENDP ; std::vector<int,std::allocator<int> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Unchecked_begin@?$vector@HV?$allocator@H@std@@@std@@QAEPAHXZ
_TEXT	SEGMENT
?_Unchecked_begin@?$vector@HV?$allocator@H@std@@@std@@QAEPAHXZ PROC ; std::vector<int,std::allocator<int> >::_Unchecked_begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1679
	mov	eax, DWORD PTR [ecx]
; Line 1680
	ret	0
?_Unchecked_begin@?$vector@HV?$allocator@H@std@@@std@@QAEPAHXZ ENDP ; std::vector<int,std::allocator<int> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ PROC	; std::vector<int,std::allocator<int> >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1592
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [ecx+4], eax
; Line 1593
	ret	0
?clear@?$vector@HV?$allocator@H@std@@@std@@QAEXXZ ENDP	; std::vector<int,std::allocator<int> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z PROC ; std::vector<int,std::allocator<int> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 936
	push	ebp
	mov	ebp, esp
; Line 1726
	mov	edx, DWORD PTR [ecx+4]
	cmp	DWORD PTR [ecx+8], edx
; Line 917
	je	SHORT $LN6@push_back
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 879
	mov	eax, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 905
	add	DWORD PTR [ecx+4], 4
; Line 938
	pop	ebp
	ret	4
$LN6@push_back:
; Line 922
	push	DWORD PTR __Val$[ebp]
	push	edx
	call	??$_Emplace_reallocate@H@?$vector@HV?$allocator@H@std@@@std@@QAEPAHQAH$$QAH@Z ; std::vector<int,std::allocator<int> >::_Emplace_reallocate<int>
; Line 938
	pop	ebp
	ret	4
?push_back@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z ENDP ; std::vector<int,std::allocator<int> >::push_back
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$emplace_back@H@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z
_TEXT	SEGMENT
_<_Val_0>$ = 8						; size = 4
??$emplace_back@H@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z PROC ; std::vector<int,std::allocator<int> >::emplace_back<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 916
	push	ebp
	mov	ebp, esp
; Line 1726
	mov	edx, DWORD PTR [ecx+4]
	cmp	DWORD PTR [ecx+8], edx
; Line 917
	je	SHORT $LN2@emplace_ba
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 879
	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 905
	add	DWORD PTR [ecx+4], 4
; Line 928
	pop	ebp
	ret	4
$LN2@emplace_ba:
; Line 922
	push	DWORD PTR _<_Val_0>$[ebp]
	push	edx
	call	??$_Emplace_reallocate@H@?$vector@HV?$allocator@H@std@@@std@@QAEPAHQAH$$QAH@Z ; std::vector<int,std::allocator<int> >::_Emplace_reallocate<int>
; Line 928
	pop	ebp
	ret	4
??$emplace_back@H@?$vector@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z ENDP ; std::vector<int,std::allocator<int> >::emplace_back<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Emplace_back_with_unused_capacity@H@?$vector@HV?$allocator@H@std@@@std@@AAEX$$QAH@Z
_TEXT	SEGMENT
_<_Val_0>$ = 8						; size = 4
??$_Emplace_back_with_unused_capacity@H@?$vector@HV?$allocator@H@std@@@std@@AAEX$$QAH@Z PROC ; std::vector<int,std::allocator<int> >::_Emplace_back_with_unused_capacity<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 900
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
; Line 346
	mov	edx, DWORD PTR [ecx+4]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 879
	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 905
	add	DWORD PTR [ecx+4], 4
; Line 911
	pop	ebp
	ret	4
??$_Emplace_back_with_unused_capacity@H@?$vector@HV?$allocator@H@std@@@std@@AAEX$$QAH@Z ENDP ; std::vector<int,std::allocator<int> >::_Emplace_back_with_unused_capacity<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 893
	push	esi
	mov	esi, ecx
; Line 1913
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN4@vector
; Line 1715
	mov	edx, DWORD PTR [esi+8]
	sub	edx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 992
	and	edx, -4					; fffffffcH
; Line 201
	cmp	edx, 4096				; 00001000H
	jb	SHORT $LN80@vector
; Line 118
	mov	ecx, DWORD PTR [eax-4]
	add	edx, 35					; 00000023H
; Line 131
	sub	eax, ecx
; Line 132
	add	eax, -4					; fffffffcH
	cmp	eax, 31					; 0000001fH
	ja	SHORT $LN77@vector
; Line 133
	mov	eax, ecx
$LN80@vector:
; Line 207
	push	edx
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1918
	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 207
	add	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1919
	mov	DWORD PTR [esi+4], 0
; Line 1920
	mov	DWORD PTR [esi+8], 0
$LN4@vector:
	pop	esi
; Line 895
	ret	0
$LN77@vector:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 132
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN103@vector:
	int	3
??1?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 389
	mov	DWORD PTR [ecx], 0
; Line 652
	mov	eax, ecx
; Line 390
	mov	DWORD PTR [ecx+4], 0
; Line 391
	mov	DWORD PTR [ecx+8], 0
; Line 652
	ret	0
??0?$vector@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QBE?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QBE?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ PROC ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 222
	push	ebp
	mov	ebp, esp
; Line 223
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], ecx
; Line 224
	pop	ebp
	ret	4
?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QBE?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ ENDP ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QAE@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QAE@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z PROC ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 211
	push	ebp
	mov	ebp, esp
; Line 210
	mov	edx, DWORD PTR __Other$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 212
	mov	eax, ecx
	pop	ebp
	ret	4
??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QAE@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ENDP ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QBE_JXZ
_TEXT	SEGMENT
?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QBE_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 104
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
; Line 105
	ret	0
?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QBE_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??A?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAA_WI@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??A?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAA_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3201
	push	ebp
	mov	ebp, esp
; Line 1825
	cmp	DWORD PTR [ecx+20], 8
; Line 1804
	mov	eax, DWORD PTR __Off$[ebp]
	jb	SHORT $LN14@operator
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
; Line 346
	mov	ecx, DWORD PTR [ecx]
$LN14@operator:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3207
	lea	eax, DWORD PTR [ecx+eax*2]
	pop	ebp
	ret	4
??A?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAA_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2497
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 307
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2497
	push	esi
	push	edi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 307
	lea	edi, DWORD PTR [eax+2]
	npad	1
$LL9@operator:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL9@operator
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2676
	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 307
	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2676
	push	eax
	push	edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
; Line 2498
	pop	edi
	pop	esi
; Line 2499
	pop	ebp
	ret	4
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2459
	push	esi
	mov	esi, ecx
; Line 1825
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, 8
; Line 3987
	jb	SHORT $LN43@basic_stri
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 992
	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR [ecx*2+2]
; Line 201
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN42@basic_stri
; Line 118
	mov	edx, DWORD PTR [eax-4]
	add	ecx, 35					; 00000023H
; Line 131
	sub	eax, edx
; Line 132
	add	eax, -4					; fffffffcH
	cmp	eax, 31					; 0000001fH
	ja	SHORT $LN39@basic_stri
; Line 133
	mov	eax, edx
$LN42@basic_stri:
; Line 207
	push	ecx
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN43@basic_stri:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3995
	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 359
	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3996
	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 359
	mov	WORD PTR [esi], ax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2461
	ret	0
$LN39@basic_stri:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 132
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN60@basic_stri:
	int	3
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 359
	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3976
	mov	DWORD PTR [ecx+16], 0
; Line 3977
	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 359
	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2144
	mov	eax, ecx
	ret	0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$dead$ = ecx
	ret	0
??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>, COMDAT
; _this$dead$ = ecx
	ret	0
??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$dead$ = ecx
	ret	0
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABQAHXZ
_TEXT	SEGMENT
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABQAHXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Mylast, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 591
	lea	eax, DWORD PTR [ecx+4]
; Line 592
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABQAHXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAHXZ
_TEXT	SEGMENT
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAHXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Mylast, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 586
	lea	eax, DWORD PTR [ecx+4]
; Line 587
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAHXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABQAHXZ
_TEXT	SEGMENT
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABQAHXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Myfirst, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 581
	mov	eax, ecx
; Line 582
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABQAHXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAHXZ
_TEXT	SEGMENT
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAHXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Myfirst, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 576
	mov	eax, ecx
; Line 577
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAHXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$allocator@H@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$allocator@H@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 545
	mov	eax, ecx
; Line 546
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$allocator@H@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Orphan_all, COMDAT
; _this$dead$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 536
	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 389
	mov	DWORD PTR [ecx], 0
; Line 423
	mov	eax, ecx
; Line 390
	mov	DWORD PTR [ecx+4], 0
; Line 391
	mov	DWORD PTR [ecx+8], 0
; Line 423
	ret	0
??0?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@ABEXPAH0@Z
_TEXT	SEGMENT
___formal$dead$ = 8					; size = 4
___formal$dead$ = 12					; size = 4
?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@ABEXPAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Orphan_range, COMDAT
; _this$dead$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1960
	ret	8
?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@ABEXPAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AAEXXZ PROC	; std::vector<int,std::allocator<int> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1910
	push	esi
	mov	esi, ecx
; Line 1913
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@Tidy
; Line 1715
	mov	edx, DWORD PTR [esi+8]
	sub	edx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 992
	and	edx, -4					; fffffffcH
; Line 201
	cmp	edx, 4096				; 00001000H
	jb	SHORT $LN78@Tidy
; Line 118
	mov	ecx, DWORD PTR [eax-4]
	add	edx, 35					; 00000023H
; Line 131
	sub	eax, ecx
; Line 132
	add	eax, -4					; fffffffcH
	cmp	eax, 31					; 0000001fH
	ja	SHORT $LN75@Tidy
; Line 133
	mov	eax, ecx
$LN78@Tidy:
; Line 207
	push	edx
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1918
	mov	DWORD PTR [esi], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 207
	add	esp, 8
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1919
	mov	DWORD PTR [esi+4], 0
; Line 1920
	mov	DWORD PTR [esi+8], 0
$LN2@Tidy:
; Line 1922
	pop	esi
	ret	0
$LN75@Tidy:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 132
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN100@Tidy:
	int	3
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AAEXXZ ENDP	; std::vector<int,std::allocator<int> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AAEXPAH0@Z
_TEXT	SEGMENT
__First$dead$ = 8					; size = 4
__Last$dead$ = 12					; size = 4
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AAEXPAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Destroy, COMDAT
; _this$dead$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1850
	ret	8
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AAEXPAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Has_unused_capacity@?$vector@HV?$allocator@H@std@@@std@@ABE_NXZ
_TEXT	SEGMENT
?_Has_unused_capacity@?$vector@HV?$allocator@H@std@@@std@@ABE_NXZ PROC ; std::vector<int,std::allocator<int> >::_Has_unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1726
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [ecx+4]
	setne	al
; Line 1727
	ret	0
?_Has_unused_capacity@?$vector@HV?$allocator@H@std@@@std@@ABE_NXZ ENDP ; std::vector<int,std::allocator<int> >::_Has_unused_capacity
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty, COMDAT
; _this$dead$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1862
	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ
_TEXT	SEGMENT
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1825
	cmp	DWORD PTR [ecx+20], 8
; Line 1804
	jb	SHORT $LN8@Myptr
; Line 1809
	mov	eax, DWORD PTR [ecx]
; Line 1810
	ret	0
$LN8@Myptr:
; Line 1809
	mov	eax, ecx
; Line 1810
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2043
	mov	eax, ecx
; Line 2044
	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1784
	mov	DWORD PTR [ecx+16], 0
; Line 1911
	mov	eax, ecx
; Line 1785
	mov	DWORD PTR [ecx+20], 0
; Line 1911
	ret	0
??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3984
	push	esi
	mov	esi, ecx
; Line 1825
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, 8
; Line 3987
	jb	SHORT $LN41@Tidy_deall
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 992
	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR [ecx*2+2]
; Line 201
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN40@Tidy_deall
; Line 118
	mov	edx, DWORD PTR [eax-4]
	add	ecx, 35					; 00000023H
; Line 131
	sub	eax, edx
; Line 132
	add	eax, -4					; fffffffcH
	cmp	eax, 31					; 0000001fH
	ja	SHORT $LN37@Tidy_deall
; Line 133
	mov	eax, edx
$LN40@Tidy_deall:
; Line 207
	push	ecx
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN41@Tidy_deall:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3995
	mov	DWORD PTR [esi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 359
	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3996
	mov	DWORD PTR [esi+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 359
	mov	WORD PTR [esi], ax
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 4000
	ret	0
$LN37@Tidy_deall:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 132
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN46@Tidy_deall:
	int	3
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 359
	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3976
	mov	DWORD PTR [ecx+16], 0
; Line 3977
	mov	DWORD PTR [ecx+20], 7
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 359
	mov	WORD PTR [ecx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3981
	ret	0
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2675
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 307
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2675
	push	esi
	push	edi
	mov	esi, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 307
	lea	edi, DWORD PTR [eax+2]
	npad	1
$LL7@assign:
	mov	cx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL7@assign
	sub	eax, edi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2676
	mov	ecx, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 307
	sar	eax, 1
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2676
	push	eax
	push	edx
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	pop	edi
	pop	esi
; Line 2677
	pop	ebp
	ret	4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Max_value@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
??$_Max_value@I@std@@YAABIABI0@Z PROC			; std::_Max_value<unsigned int>, COMDAT
; __Left$ = ecx
; __Right$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility
; Line 33
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	cmovb	ecx, edx
	mov	eax, ecx
; Line 34
	ret	0
??$_Max_value@I@std@@YAABIABI0@Z ENDP			; std::_Max_value<unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?copy@?$_WChar_traits@_W@std@@SAPA_WQA_WQB_WI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?copy@?$_WChar_traits@_W@std@@SAPA_WQA_WQB_WI@Z PROC	; std::_WChar_traits<wchar_t>::copy, COMDAT
; __First1$ = ecx
; __First2$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 313
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
; Line 233
	mov	eax, DWORD PTR __Count$[ebp]
	add	eax, eax
	push	eax
	push	edx
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 316
	pop	ebp
	ret	0
?copy@?$_WChar_traits@_W@std@@SAPA_WQA_WQB_WI@Z ENDP	; std::_WChar_traits<wchar_t>::copy
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QAEAAV?$allocator@H@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QAEAAV?$allocator@H@2@XZ PROC ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 292
	mov	eax, ecx
; Line 293
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QAEAAV?$allocator@H@2@XZ ENDP ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABQAHXZ
_TEXT	SEGMENT
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABQAHXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Myend, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 601
	lea	eax, DWORD PTR [ecx+8]
; Line 602
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABQAHXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAHXZ
_TEXT	SEGMENT
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAHXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Myend, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 596
	lea	eax, DWORD PTR [ecx+8]
; Line 597
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAHXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@H@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@H@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Get_data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 560
	mov	eax, ecx
; Line 561
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@H@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@H@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@H@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Get_data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 555
	mov	eax, ecx
; Line 556
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@H@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC ; std::vector<int,std::allocator<int> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1715
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
; Line 1716
	ret	0
?capacity@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP ; std::vector<int,std::allocator<int> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@H@std@@QAEXQAHI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@H@std@@QAEXQAHI@Z PROC		; std::allocator<int>::deallocate, COMDAT
; _this$dead$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 990
	push	ebp
	mov	ebp, esp
; Line 992
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	edx, DWORD PTR [eax*4]
; Line 201
	cmp	edx, 4096				; 00001000H
	jb	SHORT $LN15@deallocate
; Line 115
	push	esi
; Line 118
	mov	esi, DWORD PTR [ecx-4]
	add	edx, 35					; 00000023H
; Line 131
	sub	ecx, esi
; Line 132
	lea	eax, DWORD PTR [ecx-4]
	cmp	eax, 31					; 0000001fH
	ja	SHORT $LN12@deallocate
; Line 133
	mov	ecx, esi
	pop	esi
$LN15@deallocate:
; Line 207
	push	edx
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
; Line 993
	pop	ebp
	ret	8
$LN12@deallocate:
; Line 132
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@deallocate:
	int	3
?deallocate@?$allocator@H@std@@QAEXQAHI@Z ENDP		; std::allocator<int>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 302
	mov	eax, ecx
; Line 303
	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1825
	cmp	DWORD PTR [ecx+20], 8
	setae	al
; Line 1826
	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBE_NXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2048
	mov	eax, ecx
; Line 2049
	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$allocator@_W@2@XZ
_TEXT	SEGMENT
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$allocator@_W@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2033
	mov	eax, ecx
; Line 2034
	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEAAV?$allocator@_W@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all, COMDAT
; _this$dead$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2024
	ret	0
?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z
_TEXT	SEGMENT
__Old$1$ = -12						; size = 4
__Ptr$GSCopy$1$ = -8					; size = 4
__Count$GSCopy$1$ = -4					; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2657
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR __Ptr$GSCopy$1$[ebp], edx
	mov	DWORD PTR __Count$GSCopy$1$[ebp], eax
; Line 2659
	mov	ecx, DWORD PTR [edi+20]
	mov	DWORD PTR __Old$1$[ebp], ecx
	cmp	eax, ecx
	ja	SHORT $LN2@assign
; Line 1803
	mov	ebx, edi
; Line 1825
	cmp	ecx, 8
; Line 1804
	jb	SHORT $LN9@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
; Line 346
	mov	ebx, DWORD PTR [edi]
$LN9@assign:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
; Line 246
	lea	esi, DWORD PTR [eax+eax]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2662
	mov	DWORD PTR [edi+16], eax
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
; Line 246
	push	esi
	push	edx
	push	ebx
	call	_memmove
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 359
	xor	eax, eax
	mov	WORD PTR [esi+ebx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2672
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN2@assign:
; Line 3889
	cmp	eax, 2147483646				; 7ffffffeH
	ja	$LN141@assign
; Line 3869
	mov	esi, eax
	or	esi, 7
	cmp	esi, 2147483646				; 7ffffffeH
; Line 3870
	jbe	SHORT $LN45@assign
; Line 3872
	mov	esi, 2147483646				; 7ffffffeH
	jmp	SHORT $LN44@assign
$LN45@assign:
; Line 3876
	mov	edx, ecx
	mov	eax, 2147483646				; 7ffffffeH
	shr	edx, 1
	sub	eax, edx
	cmp	ecx, eax
	jbe	SHORT $LN46@assign
; Line 3878
	mov	esi, 2147483646				; 7ffffffeH
	jmp	SHORT $LN44@assign
$LN46@assign:
; Line 3881
	lea	eax, DWORD PTR [edx+ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility
; Line 33
	cmp	esi, eax
	cmovb	esi, eax
$LN44@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3898
	lea	eax, DWORD PTR [esi+1]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 25
	lea	ecx, DWORD PTR [eax+eax]
; Line 26
	cmp	eax, 2147483647				; 7fffffffH
	jbe	SHORT $LN75@assign
; Line 29
	or	ecx, -1
; Line 182
	jmp	SHORT $LN137@assign
$LN75@assign:
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN78@assign
$LN137@assign:
; Line 93
	lea	eax, DWORD PTR [ecx+35]
; Line 94
	or	edx, -1
	cmp	eax, ecx
	cmovbe	eax, edx
; Line 52
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
; Line 101
	test	eax, eax
	je	SHORT $LN122@assign
; Line 103
	lea	ebx, DWORD PTR [eax+35]
	and	ebx, -32				; ffffffe0H
; Line 104
	mov	DWORD PTR [ebx-4], eax
; Line 184
	jmp	SHORT $LN77@assign
$LN78@assign:
; Line 188
	test	ecx, ecx
	je	SHORT $LN79@assign
; Line 52
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
; Line 190
	mov	ebx, eax
	jmp	SHORT $LN77@assign
$LN79@assign:
; Line 193
	xor	ebx, ebx
$LN77@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3900
	mov	eax, DWORD PTR __Count$GSCopy$1$[ebp]
; Line 3901
	mov	DWORD PTR [edi+20], esi
	mov	DWORD PTR [edi+16], eax
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
; Line 233
	lea	esi, DWORD PTR [eax+eax]
	push	esi
	push	DWORD PTR __Ptr$GSCopy$1$[ebp]
	push	ebx
	call	_memcpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 359
	xor	eax, eax
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
; Line 233
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 359
	mov	WORD PTR [esi+ebx], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3903
	mov	eax, DWORD PTR __Old$1$[ebp]
	cmp	eax, 8
	jb	SHORT $LN23@assign
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 992
	lea	ecx, DWORD PTR [eax*2+2]
	mov	eax, DWORD PTR [edi]
; Line 201
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN125@assign
; Line 118
	mov	edx, DWORD PTR [eax-4]
	add	ecx, 35					; 00000023H
; Line 131
	sub	eax, edx
; Line 132
	add	eax, -4					; fffffffcH
	cmp	eax, 31					; 0000001fH
	ja	SHORT $LN122@assign
; Line 133
	mov	eax, edx
$LN125@assign:
; Line 207
	push	ecx
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN23@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2668
	mov	DWORD PTR [edi], ebx
; Line 2672
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN122@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 132
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN141@assign:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3891
	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN138@assign:
	int	3
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@QB_WI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??R<lambda_03628ca18370b1f44a99b655e704819b>@@QBEXQA_WIQB_W@Z
_TEXT	SEGMENT
__New_ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??R<lambda_03628ca18370b1f44a99b655e704819b>@@QBEXQA_WIQB_W@Z PROC ; <lambda_03628ca18370b1f44a99b655e704819b>::operator(), COMDAT
; _this$dead$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2668
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
; Line 233
	mov	eax, DWORD PTR __Count$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2668
	push	esi
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
; Line 233
	mov	esi, DWORD PTR __New_ptr$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2668
	push	edi
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
; Line 233
	lea	edi, DWORD PTR [eax+eax]
	push	edi
	push	DWORD PTR __Ptr$[ebp]
	push	esi
	call	_memcpy
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 359
	xor	eax, eax
	mov	WORD PTR [edi+esi], ax
	pop	edi
	pop	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2671
	pop	ebp
	ret	12					; 0000000cH
??R<lambda_03628ca18370b1f44a99b655e704819b>@@QBEXQA_WIQB_W@Z ENDP ; <lambda_03628ca18370b1f44a99b655e704819b>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@_W@std@@QAEXQA_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@_W@std@@QAEXQA_WI@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT
; _this$dead$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 990
	push	ebp
	mov	ebp, esp
; Line 992
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	edx, DWORD PTR [eax+eax]
; Line 201
	cmp	edx, 4096				; 00001000H
	jb	SHORT $LN15@deallocate
; Line 115
	push	esi
; Line 118
	mov	esi, DWORD PTR [ecx-4]
	add	edx, 35					; 00000023H
; Line 131
	sub	ecx, esi
; Line 132
	lea	eax, DWORD PTR [ecx-4]
	cmp	eax, 31					; 0000001fH
	ja	SHORT $LN12@deallocate
; Line 133
	mov	ecx, esi
	pop	esi
$LN15@deallocate:
; Line 207
	push	edx
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
; Line 993
	pop	ebp
	ret	8
$LN12@deallocate:
; Line 132
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN18@deallocate:
	int	3
?deallocate@?$allocator@_W@std@@QAEXQA_WI@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$_WChar_traits@_W@std@@SAXAA_WAB_W@Z
_TEXT	SEGMENT
?assign@?$_WChar_traits@_W@std@@SAXAA_WAB_W@Z PROC	; std::_WChar_traits<wchar_t>::assign, COMDAT
; __Left$ = ecx
; __Right$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 359
	mov	ax, WORD PTR [edx]
	mov	WORD PTR [ecx], ax
; Line 360
	ret	0
?assign@?$_WChar_traits@_W@std@@SAXAA_WAB_W@Z ENDP	; std::_WChar_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?length@?$_WChar_traits@_W@std@@SAIPB_W@Z
_TEXT	SEGMENT
?length@?$_WChar_traits@_W@std@@SAIPB_W@Z PROC		; std::_WChar_traits<wchar_t>::length, COMDAT
; __First$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 307
	lea	edx, DWORD PTR [ecx+2]
$LL3@length:
	mov	ax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL3@length
	sub	ecx, edx
	sar	ecx, 1
	mov	eax, ecx
; Line 309
	ret	0
?length@?$_WChar_traits@_W@std@@SAIPB_W@Z ENDP		; std::_WChar_traits<wchar_t>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@H@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@H@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_second, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 307
	mov	eax, ecx
; Line 308
	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@H@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@H@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@H@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_second, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 302
	mov	eax, ecx
; Line 303
	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@H@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 307
	mov	eax, ecx
; Line 308
	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$allocator@_W@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$allocator@_W@2@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 292
	mov	eax, ecx
; Line 293
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAEAAV?$allocator@_W@2@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?move@?$_WChar_traits@_W@std@@SAPA_WQA_WQB_WI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?move@?$_WChar_traits@_W@std@@SAPA_WQA_WQB_WI@Z PROC	; std::_WChar_traits<wchar_t>::move, COMDAT
; __First1$ = ecx
; __First2$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 346
	push	ebp
	mov	ebp, esp
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
; Line 246
	mov	eax, DWORD PTR __Count$[ebp]
	add	eax, eax
	push	eax
	push	edx
	push	ecx
	call	_memmove
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 349
	pop	ebp
	ret	0
?move@?$_WChar_traits@_W@std@@SAPA_WQA_WQB_WI@Z ENDP	; std::_WChar_traits<wchar_t>::move
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Min_value@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
??$_Min_value@I@std@@YAABIABI0@Z PROC			; std::_Min_value<unsigned int>, COMDAT
; __Left$ = ecx
; __Right$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility
; Line 24
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx]
	cmovb	ecx, edx
	mov	eax, ecx
; Line 25
	ret	0
??$_Min_value@I@std@@YAABIABI0@Z ENDP			; std::_Min_value<unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QAE@AB_J@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QAE@AB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,void>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 89
	push	ebp
	mov	ebp, esp
; Line 88
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 90
	mov	eax, ecx
	pop	ebp
	ret	4
??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QAE@AB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAE@AB_J@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAE@AB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 89
	push	ebp
	mov	ebp, esp
; Line 88
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 90
	mov	eax, ecx
	pop	ebp
	ret	4
??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAE@AB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QAE@ABH@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QAE@ABH@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000> >::duration<__int64,std::ratio<1,1000> ><int,void>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 89
	push	ebp
	mov	ebp, esp
; Line 88
	mov	eax, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [eax]
	cdq
	mov	DWORD PTR [ecx], eax
; Line 90
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], edx
	pop	ebp
	ret	4
??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QAE@ABH@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000> >::duration<__int64,std::ratio<1,1000> ><int,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXABV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z
_TEXT	SEGMENT
__Rel_time$1$ = -36					; size = 4
$T8 = -32						; size = 16
__Tgt$ = -32						; size = 16
__$ArrayPad$ = -4					; size = 4
??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXABV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z PROC ; std::this_thread::sleep_for<__int64,std::ratio<1,1000> >, COMDAT
; __Rel_time$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\thread
; Line 134
	push	ebp
	mov	ebp, esp
	and	esp, -16				; fffffff0H
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+40], eax
	mov	eax, ecx
	push	esi
	push	edi
	mov	DWORD PTR __Rel_time$1$[esp+48], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 457
	cmp	DWORD PTR [eax+4], 0
	jg	SHORT $LN4@sleep_for
	jl	SHORT $LN148@sleep_for
	cmp	DWORD PTR [eax], 0
	ja	SHORT $LN4@sleep_for
$LN148@sleep_for:
	xorps	xmm0, xmm0
; Line 821
	mov	DWORD PTR $T8[esp+56], 0
	movlpd	QWORD PTR $T8[esp+48], xmm0
; Line 823
	jmp	SHORT $LN5@sleep_for
$LN4@sleep_for:
; Line 775
	call	DWORD PTR __imp___Xtime_get_ticks
; Line 210
	mov	esi, eax
	mov	edi, edx
; Line 507
	mov	eax, DWORD PTR __Rel_time$1$[esp+48]
	push	0
	push	10000					; 00002710H
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	__allmul
; Line 88
	add	eax, esi
	push	0
	push	100					; 00000064H
	adc	edx, edi
	push	edx
	push	eax
	call	__allmul
; Line 141
	push	0
	push	1000000000				; 3b9aca00H
; Line 88
	mov	esi, eax
; Line 141
	push	edx
	push	esi
	call	__alldiv
; Line 828
	mov	DWORD PTR $T8[esp+48], eax
	imul	eax, eax, 1000000000
	mov	DWORD PTR $T8[esp+52], edx
; Line 88
	sub	esi, eax
; Line 830
	mov	DWORD PTR $T8[esp+56], esi
$LN5@sleep_for:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\thread
; Line 135
	movaps	xmm0, XMMWORD PTR $T8[esp+48]
; Line 128
	lea	eax, DWORD PTR __Tgt$[esp+48]
	push	eax
; Line 135
	movaps	XMMWORD PTR __Tgt$[esp+52], xmm0
; Line 128
	call	DWORD PTR __imp___Thrd_sleep
; Line 137
	mov	ecx, DWORD PTR __$ArrayPad$[esp+52]
; Line 128
	add	esp, 4
; Line 137
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXABV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z ENDP ; std::this_thread::sleep_for<__int64,std::ratio<1,1000> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$move@AAH@std@@YA$$QAHAAH@Z
_TEXT	SEGMENT
??$move@AAH@std@@YA$$QAHAAH@Z PROC			; std::move<int &>, COMDAT
; __Arg$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\type_traits
; Line 1589
	mov	eax, ecx
; Line 1590
	ret	0
??$move@AAH@std@@YA$$QAHAAH@Z ENDP			; std::move<int &>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$forward@H@std@@YA$$QAHAAH@Z
_TEXT	SEGMENT
??$forward@H@std@@YA$$QAHAAH@Z PROC			; std::forward<int>, COMDAT
; __Arg$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\type_traits
; Line 1574
	mov	eax, ecx
; Line 1575
	ret	0
??$forward@H@std@@YA$$QAHAAH@Z ENDP			; std::forward<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Unfancy@H@std@@YAPAHPAH@Z
_TEXT	SEGMENT
??$_Unfancy@H@std@@YAPAHPAH@Z PROC			; std::_Unfancy<int>, COMDAT
; __Ptr$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
; Line 346
	mov	eax, ecx
; Line 347
	ret	0
??$_Unfancy@H@std@@YAPAHPAH@Z ENDP			; std::_Unfancy<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAAV?$allocator@H@1@QAH$$QAH@Z
_TEXT	SEGMENT
_<_Args_0>$ = 8						; size = 4
??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAAV?$allocator@H@1@QAH$$QAH@Z PROC ; std::_Default_allocator_traits<std::allocator<int> >::construct<int,int>, COMDAT
; ___formal$dead$ = ecx
; __Ptr$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 879
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
; Line 882
	pop	ebp
	ret	0
??$construct@HH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAAV?$allocator@H@1@QAH$$QAH@Z ENDP ; std::_Default_allocator_traits<std::allocator<int> >::construct<int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Emplace_reallocate@H@?$vector@HV?$allocator@H@std@@@std@@QAEPAHQAH$$QAH@Z
_TEXT	SEGMENT
tv893 = -16						; size = 4
__Newsize$1$ = -12					; size = 4
__Whereptr$GSCopy$1$ = -8				; size = 4
tv892 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@H@?$vector@HV?$allocator@H@std@@@std@@QAEPAHQAH$$QAH@Z PROC ; std::vector<int,std::allocator<int> >::_Emplace_reallocate<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 942
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	ebx
	mov	ebx, DWORD PTR __Whereptr$[ebp]
	push	esi
	push	edi
	mov	edi, ecx
	mov	DWORD PTR __Whereptr$GSCopy$1$[ebp], ebx
; Line 944
	mov	edx, DWORD PTR [edi]
	sub	ebx, edx
; Line 1704
	mov	eax, DWORD PTR [edi+4]
	sub	eax, edx
; Line 944
	sar	ebx, 2
; Line 1704
	sar	eax, 2
; Line 948
	cmp	eax, 1073741823				; 3fffffffH
	je	$LN332@Emplace_re
; Line 1715
	mov	ecx, DWORD PTR [edi+8]
; Line 953
	lea	esi, DWORD PTR [eax+1]
; Line 1715
	sub	ecx, edx
; Line 953
	mov	DWORD PTR __Newsize$1$[ebp], esi
; Line 1715
	sar	ecx, 2
; Line 1856
	mov	eax, 1073741823				; 3fffffffH
	mov	edx, ecx
	shr	edx, 1
	sub	eax, edx
	cmp	ecx, eax
	jbe	SHORT $LN48@Emplace_re
; Line 1858
	mov	eax, esi
	jmp	SHORT $LN49@Emplace_re
$LN48@Emplace_re:
; Line 1861
	lea	eax, DWORD PTR [edx+ecx]
; Line 1863
	cmp	eax, esi
	cmovb	eax, esi
$LN49@Emplace_re:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 25
	lea	ecx, DWORD PTR [eax*4]
	mov	DWORD PTR tv893[ebp], ecx
; Line 26
	cmp	eax, 1073741823				; 3fffffffH
	jbe	SHORT $LN80@Emplace_re
; Line 29
	or	ecx, -1
; Line 182
	jmp	SHORT $LN329@Emplace_re
$LN80@Emplace_re:
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN83@Emplace_re
$LN329@Emplace_re:
; Line 93
	lea	eax, DWORD PTR [ecx+35]
; Line 94
	or	edx, -1
	cmp	eax, ecx
	cmovbe	eax, edx
; Line 52
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
; Line 101
	test	eax, eax
	je	$LN298@Emplace_re
; Line 103
	lea	esi, DWORD PTR [eax+35]
	and	esi, -32				; ffffffe0H
; Line 104
	mov	DWORD PTR [esi-4], eax
; Line 184
	jmp	SHORT $LN82@Emplace_re
$LN83@Emplace_re:
; Line 188
	test	ecx, ecx
	je	SHORT $LN84@Emplace_re
; Line 52
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
; Line 190
	mov	esi, eax
	jmp	SHORT $LN82@Emplace_re
$LN84@Emplace_re:
; Line 193
	xor	esi, esi
$LN82@Emplace_re:
; Line 879
	mov	eax, DWORD PTR _<_Val_0>$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 961
	lea	ecx, DWORD PTR [ebx*4]
; Line 964
	mov	ebx, DWORD PTR __Whereptr$GSCopy$1$[ebp]
	mov	DWORD PTR tv892[ebp], ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 879
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx+esi], eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 964
	mov	eax, DWORD PTR [edi+4]
	mov	ecx, DWORD PTR [edi]
	cmp	ebx, eax
	jne	SHORT $LN4@Emplace_re
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 2402
	sub	eax, ecx
; Line 2403
	push	eax
	push	ecx
	push	esi
	call	_memmove
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 968
	mov	ebx, DWORD PTR tv892[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 2403
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 968
	jmp	SHORT $LN5@Emplace_re
$LN4@Emplace_re:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 2402
	mov	eax, ebx
	sub	eax, ecx
; Line 2403
	push	eax
	push	ecx
	push	esi
	call	_memmove
; Line 2402
	mov	eax, DWORD PTR [edi+4]
	sub	eax, ebx
; Line 2403
	push	eax
	push	ebx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 972
	mov	ebx, DWORD PTR tv892[ebp]
	lea	eax, DWORD PTR [ebx+4]
	add	eax, esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 2403
	push	eax
	call	_memmove
	add	esp, 24					; 00000018H
$LN5@Emplace_re:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1898
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN302@Emplace_re
; Line 1715
	mov	ecx, DWORD PTR [edi+8]
	sub	ecx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 992
	and	ecx, -4					; fffffffcH
; Line 201
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN301@Emplace_re
; Line 118
	mov	edx, DWORD PTR [eax-4]
	add	ecx, 35					; 00000023H
; Line 131
	sub	eax, edx
; Line 132
	add	eax, -4					; fffffffcH
	cmp	eax, 31					; 0000001fH
	ja	SHORT $LN298@Emplace_re
; Line 133
	mov	eax, edx
$LN301@Emplace_re:
; Line 207
	push	ecx
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN302@Emplace_re:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1905
	mov	eax, DWORD PTR __Newsize$1$[ebp]
	mov	DWORD PTR [edi], esi
	lea	eax, DWORD PTR [esi+eax*4]
	mov	DWORD PTR [edi+4], eax
; Line 1906
	mov	eax, DWORD PTR tv893[ebp]
	add	eax, esi
	mov	DWORD PTR [edi+8], eax
; Line 981
	mov	eax, DWORD PTR [edi]
	pop	edi
	pop	esi
	add	eax, ebx
	pop	ebx
; Line 982
	mov	esp, ebp
	pop	ebp
	ret	8
$LN298@Emplace_re:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 132
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN332@Emplace_re:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 950
	call	?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ; std::vector<int,std::allocator<int> >::_Xlength
$LN330@Emplace_re:
	int	3
??$_Emplace_reallocate@H@?$vector@HV?$allocator@H@std@@@std@@QAEPAHQAH$$QAH@Z ENDP ; std::vector<int,std::allocator<int> >::_Emplace_reallocate<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 389
	mov	DWORD PTR [ecx], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 279
	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 390
	mov	DWORD PTR [ecx+4], 0
; Line 391
	mov	DWORD PTR [ecx+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 279
	ret	4
??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z
_TEXT	SEGMENT
__Al$dead$ = 8						; size = 4
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT
; __First$dead$ = ecx
; __Last$dead$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 1161
	ret	0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Unfancy@_W@std@@YAPA_WPA_W@Z
_TEXT	SEGMENT
??$_Unfancy@_W@std@@YAPA_WPA_W@Z PROC			; std::_Unfancy<wchar_t>, COMDAT
; __Ptr$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
; Line 346
	mov	eax, ecx
; Line 347
	ret	0
??$_Unfancy@_W@std@@YAPA_WPA_W@Z ENDP			; std::_Unfancy<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1784
	mov	DWORD PTR [ecx+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 279
	mov	eax, ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1785
	mov	DWORD PTR [ecx+20], 0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 279
	ret	4
??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z
_TEXT	SEGMENT
??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z PROC		; std::addressof<wchar_t *>, COMDAT
; __Val$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
; Line 330
	mov	eax, ecx
; Line 331
	ret	0
??$addressof@PA_W@std@@YAPAPA_WAAPA_W@Z ENDP		; std::addressof<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$destroy@PA_W@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@QAPA_W@Z
_TEXT	SEGMENT
??$destroy@PA_W@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@QAPA_W@Z PROC ; std::_Default_allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>, COMDAT
; ___formal$dead$ = ecx
; __Ptr$dead$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 888
	ret	0
??$destroy@PA_W@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@QAPA_W@Z ENDP ; std::_Default_allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT
; __Bytes$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 182
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN2@Allocate
; Line 93
	lea	eax, DWORD PTR [ecx+35]
; Line 94
	or	edx, -1
	cmp	eax, ecx
	cmovbe	eax, edx
; Line 52
	push	eax
	call	??2@YAPAXI@Z				; operator new
; Line 100
	mov	ecx, eax
; Line 52
	add	esp, 4
; Line 101
	test	ecx, ecx
	je	SHORT $LN11@Allocate
; Line 103
	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H
; Line 104
	mov	DWORD PTR [eax-4], ecx
; Line 194
	ret	0
$LN11@Allocate:
; Line 101
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN2@Allocate:
; Line 188
	test	ecx, ecx
	je	SHORT $LN3@Allocate
; Line 52
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
; Line 194
	ret	0
$LN3@Allocate:
; Line 193
	xor	eax, eax
; Line 194
	ret	0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT
; __Ptr$ = ecx
; __Bytes$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 201
	cmp	edx, 4096				; 00001000H
	jb	SHORT $LN13@Deallocate
; Line 115
	push	esi
; Line 118
	mov	esi, DWORD PTR [ecx-4]
	add	edx, 35					; 00000023H
; Line 131
	sub	ecx, esi
; Line 132
	lea	eax, DWORD PTR [ecx-4]
	cmp	eax, 31					; 0000001fH
	ja	SHORT $LN10@Deallocate
; Line 133
	mov	ecx, esi
	pop	esi
$LN13@Deallocate:
; Line 207
	push	edx
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
; Line 208
	ret	0
$LN10@Deallocate:
; Line 132
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN15@Deallocate:
	int	3
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Reallocate_for@V<lambda_03628ca18370b1f44a99b655e704819b>@@PB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@IV<lambda_03628ca18370b1f44a99b655e704819b>@@PB_W@Z
_TEXT	SEGMENT
__Old$1$ = -8						; size = 4
_<_Args_0>$GSCopy$1$ = -4				; size = 4
__New_size$ = 8						; size = 4
__Fn$ = 12						; size = 1
_<_Args_0>$ = 16					; size = 4
??$_Reallocate_for@V<lambda_03628ca18370b1f44a99b655e704819b>@@PB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@IV<lambda_03628ca18370b1f44a99b655e704819b>@@PB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_03628ca18370b1f44a99b655e704819b>,wchar_t const *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3887
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	ebx
	push	esi
; Line 3889
	mov	esi, DWORD PTR __New_size$[ebp]
	mov	ebx, ecx
	mov	DWORD PTR _<_Args_0>$GSCopy$1$[ebp], eax
	push	edi
	cmp	esi, 2147483646				; 7ffffffeH
	ja	$LN119@Reallocate
; Line 3895
	mov	ecx, DWORD PTR [ebx+20]
; Line 3869
	or	esi, 7
; Line 3895
	mov	DWORD PTR __Old$1$[ebp], ecx
; Line 3869
	cmp	esi, 2147483646				; 7ffffffeH
; Line 3870
	jbe	SHORT $LN25@Reallocate
; Line 3872
	mov	esi, 2147483646				; 7ffffffeH
	jmp	SHORT $LN24@Reallocate
$LN25@Reallocate:
; Line 3876
	mov	edx, ecx
	mov	eax, 2147483646				; 7ffffffeH
	shr	edx, 1
	sub	eax, edx
	cmp	ecx, eax
	jbe	SHORT $LN26@Reallocate
; Line 3878
	mov	esi, 2147483646				; 7ffffffeH
	jmp	SHORT $LN24@Reallocate
$LN26@Reallocate:
; Line 3881
	lea	eax, DWORD PTR [edx+ecx]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility
; Line 33
	cmp	esi, eax
	cmovb	esi, eax
$LN24@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3898
	lea	eax, DWORD PTR [esi+1]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 25
	lea	ecx, DWORD PTR [eax+eax]
; Line 26
	cmp	eax, 2147483647				; 7fffffffH
	jbe	SHORT $LN55@Reallocate
; Line 29
	or	ecx, -1
; Line 182
	jmp	SHORT $LN116@Reallocate
$LN55@Reallocate:
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN58@Reallocate
$LN116@Reallocate:
; Line 93
	lea	eax, DWORD PTR [ecx+35]
; Line 94
	or	edx, -1
	cmp	eax, ecx
	cmovbe	eax, edx
; Line 52
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
; Line 101
	test	eax, eax
	je	SHORT $LN102@Reallocate
; Line 103
	lea	edi, DWORD PTR [eax+35]
	and	edi, -32				; ffffffe0H
; Line 104
	mov	DWORD PTR [edi-4], eax
; Line 184
	jmp	SHORT $LN57@Reallocate
$LN58@Reallocate:
; Line 188
	test	ecx, ecx
	je	SHORT $LN59@Reallocate
; Line 52
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
; Line 190
	mov	edi, eax
	jmp	SHORT $LN57@Reallocate
$LN59@Reallocate:
; Line 193
	xor	edi, edi
$LN57@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3900
	mov	eax, DWORD PTR __New_size$[ebp]
; Line 3901
	mov	DWORD PTR [ebx+20], esi
	mov	DWORD PTR [ebx+16], eax
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
; Line 233
	lea	esi, DWORD PTR [eax+eax]
	push	esi
	push	DWORD PTR _<_Args_0>$GSCopy$1$[ebp]
	push	edi
	call	_memcpy
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3903
	mov	ecx, DWORD PTR __Old$1$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 359
	xor	eax, eax
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\wchar.h
; Line 233
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\iosfwd
; Line 359
	mov	WORD PTR [esi+edi], ax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3903
	cmp	ecx, 8
	jb	SHORT $LN3@Reallocate
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 992
	mov	eax, DWORD PTR [ebx]
	lea	ecx, DWORD PTR [ecx*2+2]
; Line 201
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN105@Reallocate
; Line 118
	mov	edx, DWORD PTR [eax-4]
	add	ecx, 35					; 00000023H
; Line 131
	sub	eax, edx
; Line 132
	add	eax, -4					; fffffffcH
	cmp	eax, 31					; 0000001fH
	ja	SHORT $LN102@Reallocate
; Line 133
	mov	eax, edx
$LN105@Reallocate:
; Line 207
	push	ecx
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN3@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3913
	mov	DWORD PTR [ebx], edi
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebx
; Line 3914
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN102@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 132
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN119@Reallocate:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3891
	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN117@Reallocate:
	int	3
??$_Reallocate_for@V<lambda_03628ca18370b1f44a99b655e704819b>@@PB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@IV<lambda_03628ca18370b1f44a99b655e704819b>@@PB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_03628ca18370b1f44a99b655e704819b>,wchar_t const *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 389
	mov	DWORD PTR [ecx], 0
; Line 393
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+8], 0
	ret	0
??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ PROC ; std::vector<int,std::allocator<int> >::_Xlength, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1926
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN3@Xlength:
	int	3
?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ENDP ; std::vector<int,std::allocator<int> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AAEXQAHII@Z
_TEXT	SEGMENT
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AAEXQAHII@Z PROC ; std::vector<int,std::allocator<int> >::_Change_array, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1895
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; Line 1898
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN79@Change_arr
; Line 1715
	mov	edx, DWORD PTR [esi+8]
	sub	edx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 992
	and	edx, -4					; fffffffcH
; Line 201
	cmp	edx, 4096				; 00001000H
	jb	SHORT $LN78@Change_arr
; Line 118
	mov	ecx, DWORD PTR [eax-4]
	add	edx, 35					; 00000023H
; Line 131
	sub	eax, ecx
; Line 132
	add	eax, -4					; fffffffcH
	cmp	eax, 31					; 0000001fH
	ja	SHORT $LN75@Change_arr
; Line 133
	mov	eax, ecx
$LN78@Change_arr:
; Line 207
	push	edx
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN79@Change_arr:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1904
	mov	ecx, DWORD PTR __Newvec$[ebp]
; Line 1905
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [esi], ecx
	lea	eax, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [esi+4], eax
; Line 1906
	mov	eax, DWORD PTR __Newcapacity$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR [esi+8], eax
	pop	esi
; Line 1907
	pop	ebp
	ret	12					; 0000000cH
$LN75@Change_arr:
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 132
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN100@Change_arr:
	int	3
?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AAEXQAHII@Z ENDP ; std::vector<int,std::allocator<int> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@ABEII@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@ABEII@Z PROC ; std::vector<int,std::allocator<int> >::_Calculate_growth, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1853
	push	ebp
	mov	ebp, esp
; Line 1715
	mov	edx, DWORD PTR [ecx+8]
; Line 1856
	mov	eax, 1073741823				; 3fffffffH
; Line 1715
	sub	edx, DWORD PTR [ecx]
	sar	edx, 2
; Line 1856
	mov	ecx, edx
	shr	ecx, 1
	sub	eax, ecx
	cmp	edx, eax
	ja	SHORT $LN31@Calculate_
; Line 1861
	lea	eax, DWORD PTR [ecx+edx]
; Line 1863
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN1@Calculate_
$LN31@Calculate_:
; Line 1865
	mov	eax, DWORD PTR __Newsize$[ebp]
$LN1@Calculate_:
; Line 1869
	pop	ebp
	ret	4
?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@ABEII@Z ENDP ; std::vector<int,std::allocator<int> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Umove_if_noexcept@?$vector@HV?$allocator@H@std@@@std@@AAEXPAH00@Z
_TEXT	SEGMENT
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?_Umove_if_noexcept@?$vector@HV?$allocator@H@std@@@std@@AAEXPAH00@Z PROC ; std::vector<int,std::allocator<int> >::_Umove_if_noexcept, COMDAT
; _this$dead$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1842
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 2402
	sub	eax, edx
; Line 2403
	push	eax
	push	edx
	push	ecx
	call	_memmove
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1845
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 2403
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1845
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Umove_if_noexcept@?$vector@HV?$allocator@H@std@@@std@@AAEXPAH00@Z ENDP ; std::vector<int,std::allocator<int> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Umove@?$vector@HV?$allocator@H@std@@@std@@AAEPAHPAH00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?_Umove@?$vector@HV?$allocator@H@std@@@std@@AAEPAHPAH00@Z PROC ; std::vector<int,std::allocator<int> >::_Umove, COMDAT
; _this$dead$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1827
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __First$[ebp]
	push	esi
	mov	esi, DWORD PTR __Dest$[ebp]
	push	edi
	mov	edi, DWORD PTR __Last$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 2402
	sub	edi, eax
; Line 2403
	push	edi
	push	eax
	push	esi
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 2404
	lea	eax, DWORD PTR [edi+esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1828
	pop	edi
	pop	esi
; Line 1829
	pop	ebp
	ret	12					; 0000000cH
?_Umove@?$vector@HV?$allocator@H@std@@@std@@AAEPAHPAH00@Z ENDP ; std::vector<int,std::allocator<int> >::_Umove
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC ; std::vector<int,std::allocator<int> >::max_size, COMDAT
; _this$dead$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1709
	mov	eax, 1073741823				; 3fffffffH
; Line 1711
	ret	0
?max_size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP ; std::vector<int,std::allocator<int> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ PROC	; std::vector<int,std::allocator<int> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1704
	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
; Line 1705
	ret	0
?size@?$vector@HV?$allocator@H@std@@@std@@QBEIXZ ENDP	; std::vector<int,std::allocator<int> >::size
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?allocate@?$allocator@H@std@@QAEPAHI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@H@std@@QAEPAHI@Z PROC		; std::allocator<int>::allocate, COMDAT
; _this$dead$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 996
	push	ebp
	mov	ebp, esp
; Line 25
	mov	eax, DWORD PTR __Count$[ebp]
	lea	ecx, DWORD PTR [eax*4]
; Line 26
	cmp	eax, 1073741823				; 3fffffffH
	jbe	SHORT $LN4@allocate
; Line 29
	or	ecx, -1
; Line 182
	jmp	SHORT $LN27@allocate
$LN4@allocate:
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN7@allocate
$LN27@allocate:
; Line 93
	lea	eax, DWORD PTR [ecx+35]
; Line 94
	or	edx, -1
	cmp	eax, ecx
	cmovbe	eax, edx
; Line 52
	push	eax
	call	??2@YAPAXI@Z				; operator new
; Line 100
	mov	ecx, eax
; Line 52
	add	esp, 4
; Line 101
	test	ecx, ecx
	je	SHORT $LN16@allocate
; Line 103
	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H
; Line 104
	mov	DWORD PTR [eax-4], ecx
; Line 998
	pop	ebp
	ret	4
$LN16@allocate:
; Line 101
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN7@allocate:
; Line 188
	test	ecx, ecx
	je	SHORT $LN8@allocate
; Line 52
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
; Line 998
	pop	ebp
	ret	4
$LN8@allocate:
; Line 193
	xor	eax, eax
; Line 998
	pop	ebp
	ret	4
$LN28@allocate:
?allocate@?$allocator@H@std@@QAEPAHI@Z ENDP		; std::allocator<int>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@H@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@H@std@@QAE@XZ PROC			; std::allocator<int>::allocator<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 981
	mov	eax, ecx
	ret	0
??0?$allocator@H@std@@QAE@XZ ENDP			; std::allocator<int>::allocator<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1784
	mov	DWORD PTR [ecx+16], 0
; Line 1787
	mov	eax, ecx
	mov	DWORD PTR [ecx+20], 0
	ret	0
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 4004
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN3@Xlen:
	int	3
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEII@Z
_TEXT	SEGMENT
__Requested$ = 8					; size = 4
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEII@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3866
	push	ebp
	mov	ebp, esp
; Line 3869
	mov	edx, DWORD PTR __Requested$[ebp]
	or	edx, 7
	push	esi
	cmp	edx, 2147483646				; 7ffffffeH
; Line 3870
	ja	SHORT $LN25@Calculate_
; Line 3875
	mov	esi, DWORD PTR [ecx+20]
; Line 3876
	mov	eax, 2147483646				; 7ffffffeH
	mov	ecx, esi
	shr	ecx, 1
	sub	eax, ecx
	cmp	esi, eax
	ja	SHORT $LN25@Calculate_
; Line 3881
	lea	eax, DWORD PTR [ecx+esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility
; Line 33
	cmp	edx, eax
	pop	esi
	cmovb	edx, eax
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3881
	mov	eax, edx
; Line 3882
	pop	ebp
	ret	4
$LN25@Calculate_:
; Line 3878
	mov	eax, 2147483646				; 7ffffffeH
	pop	esi
; Line 3882
	pop	ebp
	ret	4
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEII@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT
; _this$dead$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 3310
	mov	eax, 2147483646				; 7ffffffeH
; Line 3315
	ret	0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?allocate@?$allocator@_W@std@@QAEPA_WI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@_W@std@@QAEPA_WI@Z PROC		; std::allocator<wchar_t>::allocate, COMDAT
; _this$dead$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 996
	push	ebp
	mov	ebp, esp
; Line 25
	mov	eax, DWORD PTR __Count$[ebp]
	lea	ecx, DWORD PTR [eax+eax]
; Line 26
	cmp	eax, 2147483647				; 7fffffffH
	jbe	SHORT $LN4@allocate
; Line 29
	or	ecx, -1
; Line 182
	jmp	SHORT $LN27@allocate
$LN4@allocate:
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN7@allocate
$LN27@allocate:
; Line 93
	lea	eax, DWORD PTR [ecx+35]
; Line 94
	or	edx, -1
	cmp	eax, ecx
	cmovbe	eax, edx
; Line 52
	push	eax
	call	??2@YAPAXI@Z				; operator new
; Line 100
	mov	ecx, eax
; Line 52
	add	esp, 4
; Line 101
	test	ecx, ecx
	je	SHORT $LN16@allocate
; Line 103
	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H
; Line 104
	mov	DWORD PTR [eax-4], ecx
; Line 998
	pop	ebp
	ret	4
$LN16@allocate:
; Line 101
	call	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
$LN7@allocate:
; Line 188
	test	ecx, ecx
	je	SHORT $LN8@allocate
; Line 52
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
; Line 998
	pop	ebp
	ret	4
$LN8@allocate:
; Line 193
	xor	eax, eax
; Line 998
	pop	ebp
	ret	4
$LN28@allocate:
?allocate@?$allocator@_W@std@@QAEPA_WI@Z ENDP		; std::allocator<wchar_t>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@_W@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@_W@std@@QAE@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 981
	mov	eax, ecx
	ret	0
??0?$allocator@_W@std@@QAE@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAIABV?$allocator@H@2@@Z
_TEXT	SEGMENT
?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAIABV?$allocator@H@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<int> >::max_size, COMDAT
; ___formal$dead$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 892
	mov	eax, 1073741823				; 3fffffffH
; Line 893
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAIABV?$allocator@H@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<int> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABV?$allocator@H@2@XZ
_TEXT	SEGMENT
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABV?$allocator@H@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 550
	mov	eax, ecx
; Line 551
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABV?$allocator@H@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<int,std::allocator<int> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Umove_if_noexcept1@?$vector@HV?$allocator@H@std@@@std@@AAEXPAH00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
?_Umove_if_noexcept1@?$vector@HV?$allocator@H@std@@@std@@AAEXPAH00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<int,std::allocator<int> >::_Umove_if_noexcept1, COMDAT
; _this$dead$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1832
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 2402
	sub	eax, edx
; Line 2403
	push	eax
	push	edx
	push	ecx
	call	_memmove
	add	esp, 12					; 0000000cH
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
; Line 1834
	pop	ebp
	ret	16					; 00000010H
?_Umove_if_noexcept1@?$vector@HV?$allocator@H@std@@@std@@AAEXPAH00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<int,std::allocator<int> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 1858
	mov	eax, ecx
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z
_TEXT	SEGMENT
?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size, COMDAT
; ___formal$dead$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 892
	mov	eax, 2147483647				; 7fffffffH
; Line 893
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$allocator@_W@2@XZ
_TEXT	SEGMENT
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$allocator@_W@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstring
; Line 2038
	mov	eax, ecx
; Line 2039
	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBEABV?$allocator@_W@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QBEABV?$allocator@H@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QBEABV?$allocator@H@2@XZ PROC ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 297
	mov	eax, ecx
; Line 298
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QBEABV?$allocator@H@2@XZ ENDP ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$allocator@_W@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$allocator@_W@2@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 297
	mov	eax, ecx
; Line 298
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QBEABV?$allocator@_W@2@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_To_xtime@_JU?$ratio@$00$0DOI@@std@@@std@@YA?AUxtime@@ABV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@0@@Z
_TEXT	SEGMENT
$T8 = 8							; size = 4
??$_To_xtime@_JU?$ratio@$00$0DOI@@std@@@std@@YA?AUxtime@@ABV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@0@@Z PROC ; std::_To_xtime<__int64,std::ratio<1,1000> >, COMDAT
; __Rel_time$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 816
	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, ecx
	push	esi
	push	edi
; Line 457
	cmp	DWORD PTR [ebx+4], 0
	jg	SHORT $LN2@To_xtime
	jl	SHORT $LN144@To_xtime
	cmp	DWORD PTR [ebx], 0
	ja	SHORT $LN2@To_xtime
$LN144@To_xtime:
; Line 820
	mov	eax, DWORD PTR $T8[ebp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; Line 821
	mov	DWORD PTR [eax+8], 0
; Line 833
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN2@To_xtime:
; Line 775
	call	DWORD PTR __imp___Xtime_get_ticks
; Line 507
	push	0
	push	10000					; 00002710H
	push	DWORD PTR [ebx+4]
; Line 210
	mov	esi, eax
	mov	edi, edx
; Line 507
	push	DWORD PTR [ebx]
	call	__allmul
; Line 88
	add	eax, esi
	push	0
	push	100					; 00000064H
	adc	edx, edi
	push	edx
	push	eax
	call	__allmul
; Line 141
	push	0
	push	1000000000				; 3b9aca00H
; Line 88
	mov	edi, eax
; Line 141
	push	edx
	push	edi
	call	__alldiv
; Line 828
	mov	esi, DWORD PTR $T8[ebp]
	imul	ecx, eax, 1000000000
	mov	DWORD PTR [esi], eax
; Line 832
	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
; Line 88
	sub	edi, ecx
; Line 830
	mov	DWORD PTR [esi+8], edi
; Line 833
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret	0
??$_To_xtime@_JU?$ratio@$00$0DOI@@std@@@std@@YA?AUxtime@@ABV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@0@@Z ENDP ; std::_To_xtime<__int64,std::ratio<1,1000> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy_range1@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
___formal$dead$ = 8					; size = 4
___formal$ = 12						; size = 1
??$_Destroy_range1@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<int> >, COMDAT
; ___formal$dead$ = ecx
; ___formal$dead$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 1147
	ret	0
??$_Destroy_range1@V?$allocator@H@std@@@std@@YAXPAH0AAV?$allocator@H@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$construct@PA_WABQA_W@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@QAPA_WABQA_W@Z
_TEXT	SEGMENT
_<_Args_0>$ = 8						; size = 4
??$construct@PA_WABQA_W@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@QAPA_WABQA_W@Z PROC ; std::_Default_allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * const &>, COMDAT
; ___formal$dead$ = ecx
; __Ptr$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 879
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
; Line 882
	pop	ebp
	ret	0
??$construct@PA_WABQA_W@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@QAPA_WABQA_W@Z ENDP ; std::_Default_allocator_traits<std::allocator<wchar_t> >::construct<wchar_t *,wchar_t * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT
; __Bytes$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 93
	lea	eax, DWORD PTR [ecx+35]
; Line 94
	or	edx, -1
	cmp	eax, ecx
	cmovbe	eax, edx
; Line 52
	push	eax
	call	??2@YAPAXI@Z				; operator new
; Line 100
	mov	ecx, eax
; Line 52
	add	esp, 4
; Line 101
	test	ecx, ecx
	je	SHORT $LN7@Allocate_m
; Line 103
	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H
; Line 104
	mov	DWORD PTR [eax-4], ecx
; Line 110
	ret	0
$LN7@Allocate_m:
; Line 101
	jmp	DWORD PTR __imp___invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHQAH0PAHAAV?$allocator@H@0@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Al$dead$ = 12						; size = 4
??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHQAH0PAHAAV?$allocator@H@0@@Z PROC ; std::_Uninitialized_move<int *,int *,std::allocator<int> >, COMDAT
; __First$ = ecx
; __Last$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
; Line 251
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, DWORD PTR __Dest$[ebp]
	push	edi
	mov	edi, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 2402
	sub	edi, ecx
; Line 2403
	push	edi
	push	ecx
	push	esi
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 2404
	lea	eax, DWORD PTR [edi+esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
; Line 260
	pop	edi
	pop	esi
; Line 261
	pop	ebp
	ret	0
??$_Uninitialized_move@PAHPAHV?$allocator@H@std@@@std@@YAPAHQAH0PAHAAV?$allocator@H@0@@Z ENDP ; std::_Uninitialized_move<int *,int *,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Idl_distance@PAHPAH@std@@YAHABQAH0@Z
_TEXT	SEGMENT
??$_Idl_distance@PAHPAH@std@@YAHABQAH0@Z PROC		; std::_Idl_distance<int *,int *>, COMDAT
; __First$ = ecx
; __Last$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 968
	mov	eax, DWORD PTR [edx]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
; Line 976
	ret	0
??$_Idl_distance@PAHPAH@std@@YAHABQAH0@Z ENDP		; std::_Idl_distance<int *,int *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Get_size_of_n@$03@std@@YAII@Z
_TEXT	SEGMENT
??$_Get_size_of_n@$03@std@@YAII@Z PROC			; std::_Get_size_of_n<4>, COMDAT
; __Count$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 26
	or	edx, -1
	lea	eax, DWORD PTR [ecx*4]
	cmp	ecx, 1073741823				; 3fffffffH
	cmova	eax, edx
; Line 33
	ret	0
??$_Get_size_of_n@$03@std@@YAII@Z ENDP			; std::_Get_size_of_n<4>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Get_size_of_n@$01@std@@YAII@Z
_TEXT	SEGMENT
??$_Get_size_of_n@$01@std@@YAII@Z PROC			; std::_Get_size_of_n<2>, COMDAT
; __Count$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
; Line 26
	or	edx, -1
	lea	eax, DWORD PTR [ecx+ecx]
	cmp	ecx, 2147483647				; 7fffffffH
	cmova	eax, edx
; Line 33
	ret	0
??$_Get_size_of_n@$01@std@@YAII@Z ENDP			; std::_Get_size_of_n<2>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QBE_JXZ
_TEXT	SEGMENT
?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QBE_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::count, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 104
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
; Line 105
	ret	0
?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QBE_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1> >::count
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?zero@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@SA?AV123@XZ
_TEXT	SEGMENT
?zero@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@SA?AV123@XZ PROC ; std::chrono::duration<__int64,std::ratio<1,1000> >::zero, COMDAT
; ___$ReturnUdt$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 88
	mov	DWORD PTR [ecx], 0
; Line 177
	mov	eax, ecx
; Line 88
	mov	DWORD PTR [ecx+4], 0
; Line 178
	ret	0
?zero@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@SA?AV123@XZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1000> >::zero
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAEAAV012@ABV012@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 146
	push	ebp
	mov	ebp, esp
; Line 147
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	sbb	DWORD PTR [ecx+4], eax
; Line 148
	mov	eax, ecx
; Line 149
	pop	ebp
	ret	4
??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAEAAV012@ABV012@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAEAAV012@ABV012@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 140
	push	ebp
	mov	ebp, esp
; Line 141
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx]
	add	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	adc	DWORD PTR [ecx+4], eax
; Line 142
	mov	eax, ecx
; Line 143
	pop	ebp
	ret	4
??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAEAAV012@ABV012@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBE_JXZ
_TEXT	SEGMENT
?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBE_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 104
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
; Line 105
	ret	0
?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QBE_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?zero@?$duration_values@_J@chrono@std@@SA_JXZ
_TEXT	SEGMENT
?zero@?$duration_values@_J@chrono@std@@SA_JXZ PROC	; std::chrono::duration_values<__int64>::zero, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 37
	xor	eax, eax
	xor	edx, edx
; Line 38
	ret	0
?zero@?$duration_values@_J@chrono@std@@SA_JXZ ENDP	; std::chrono::duration_values<__int64>::zero
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$?N_JU?$ratio@$00$0DOI@@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@0@Z
_TEXT	SEGMENT
??$?N_JU?$ratio@$00$0DOI@@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@0@Z PROC ; std::chrono::operator<=<__int64,std::ratio<1,1000>,__int64,std::ratio<1,1000> >, COMDAT
; __Left$ = ecx
; __Right$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 457
	mov	eax, DWORD PTR [edx+4]
; Line 467
	push	esi
; Line 457
	mov	esi, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [ecx+4]
	jg	SHORT $LN5@operator
	jl	SHORT $LN11@operator
	cmp	DWORD PTR [edx], esi
	jae	SHORT $LN5@operator
$LN11@operator:
	xor	al, al
; Line 469
	pop	esi
	ret	0
$LN5@operator:
; Line 457
	mov	al, 1
; Line 469
	pop	esi
	ret	0
??$?N_JU?$ratio@$00$0DOI@@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@0@Z ENDP ; std::chrono::operator<=<__int64,std::ratio<1,1000>,__int64,std::ratio<1,1000> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAE@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
_TEXT	SEGMENT
__Dur$ = 8						; size = 4
??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAE@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,void>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 99
	push	ebp
	mov	ebp, esp
; Line 507
	mov	eax, DWORD PTR __Dur$[ebp]
; Line 99
	push	esi
; Line 507
	push	0
	push	100					; 00000064H
	push	DWORD PTR [eax+4]
; Line 99
	mov	esi, ecx
; Line 507
	push	DWORD PTR [eax]
	call	__allmul
; Line 98
	mov	DWORD PTR [esi], eax
; Line 100
	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
	pop	esi
	pop	ebp
	ret	4
??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAE@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z
_TEXT	SEGMENT
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000>,void>, COMDAT
; ___$ReturnUdt$ = ecx
; __Dur$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 499
	push	esi
; Line 507
	push	0
	push	1000000					; 000f4240H
	push	DWORD PTR [edx+4]
	mov	esi, ecx
	push	DWORD PTR [edx]
	call	__allmul
	mov	DWORD PTR [esi], eax
	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
; Line 521
	pop	esi
	ret	0
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000>,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
_TEXT	SEGMENT
??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,void>, COMDAT
; ___$ReturnUdt$ = ecx
; __Dur$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 499
	push	esi
; Line 507
	push	0
	push	1000000000				; 3b9aca00H
	push	DWORD PTR [edx+4]
	mov	esi, ecx
	push	DWORD PTR [edx]
	call	__alldiv
	mov	DWORD PTR [esi], eax
	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
; Line 521
	pop	esi
	ret	0
??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@ABV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAE@AB_J@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAE@AB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 89
	push	ebp
	mov	ebp, esp
; Line 88
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 90
	mov	eax, ecx
	pop	ebp
	ret	4
??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QAE@AB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAE@ABV?$duration@_JU?$ratio@$00$00@std@@@12@@Z
_TEXT	SEGMENT
__Dur$ = 8						; size = 4
??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAE@ABV?$duration@_JU?$ratio@$00$00@std@@@12@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,void>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 99
	push	ebp
	mov	ebp, esp
; Line 507
	mov	eax, DWORD PTR __Dur$[ebp]
; Line 99
	push	esi
; Line 507
	push	0
	push	1000000000				; 3b9aca00H
	push	DWORD PTR [eax+4]
; Line 99
	mov	esi, ecx
; Line 507
	push	DWORD PTR [eax]
	call	__allmul
; Line 98
	mov	DWORD PTR [esi], eax
; Line 100
	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
	pop	esi
	pop	ebp
	ret	4
??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QAE@ABV?$duration@_JU?$ratio@$00$00@std@@@12@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$forward@ABQA_W@std@@YAABQA_WABQA_W@Z
_TEXT	SEGMENT
??$forward@ABQA_W@std@@YAABQA_WABQA_W@Z PROC		; std::forward<wchar_t * const &>, COMDAT
; __Arg$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\type_traits
; Line 1574
	mov	eax, ecx
; Line 1575
	ret	0
??$forward@ABQA_W@std@@YAABQA_WABQA_W@Z ENDP		; std::forward<wchar_t * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Get_unwrapped@H@std@@YAPAHQAH@Z
_TEXT	SEGMENT
??$_Get_unwrapped@H@std@@YAPAHQAH@Z PROC		; std::_Get_unwrapped<int>, COMDAT
; __Ptr$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 663
	mov	eax, ecx
; Line 664
	ret	0
??$_Get_unwrapped@H@std@@YAPAHQAH@Z ENDP		; std::_Get_unwrapped<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Idl_distance1@PAHPAH@std@@YAHABQAH0Urandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$_Idl_distance1@PAHPAH@std@@YAHABQAH0Urandom_access_iterator_tag@0@@Z PROC ; std::_Idl_distance1<int *,int *>, COMDAT
; __First$ = ecx
; __Last$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 968
	mov	eax, DWORD PTR [edx]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
; Line 969
	ret	0
??$_Idl_distance1@PAHPAH@std@@YAHABQAH0Urandom_access_iterator_tag@0@@Z ENDP ; std::_Idl_distance1<int *,int *>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Get_unwrapped_n@HH$0A@@std@@YAPAHQAHH@Z
_TEXT	SEGMENT
??$_Get_unwrapped_n@HH$0A@@std@@YAPAHQAHH@Z PROC	; std::_Get_unwrapped_n<int,int,0>, COMDAT
; __Src$ = ecx
; ___formal$dead$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 809
	mov	eax, ecx
; Line 810
	ret	0
??$_Get_unwrapped_n@HH$0A@@std@@YAPAHQAHH@Z ENDP	; std::_Get_unwrapped_n<int,int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Ptr_move_cat@HH@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAH0@Z
_TEXT	SEGMENT
___formal$dead$ = 8					; size = 4
??$_Ptr_move_cat@HH@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAH0@Z PROC ; std::_Ptr_move_cat<int,int>, COMDAT
; ___$ReturnUdt$ = ecx
; ___formal$dead$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 1087
	mov	eax, ecx
; Line 1088
	ret	0
??$_Ptr_move_cat@HH@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAH0@Z ENDP ; std::_Ptr_move_cat<int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Uninitialized_move_al_unchecked@HHV?$allocator@H@std@@@std@@YAPAHQAH00AAV?$allocator@H@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
___formal$dead$ = 12					; size = 4
___formal$ = 16						; size = 1
___formal$ = 20						; size = 1
??$_Uninitialized_move_al_unchecked@HHV?$allocator@H@std@@@std@@YAPAHQAH00AAV?$allocator@H@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<int,int,std::allocator<int> >, COMDAT
; __First$ = ecx
; __Last$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
; Line 243
	push	ebp
	mov	ebp, esp
	push	esi
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 2403
	mov	esi, DWORD PTR __Dest$[ebp]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
; Line 243
	push	edi
	mov	edi, edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 2402
	sub	edi, ecx
; Line 2403
	push	edi
	push	ecx
	push	esi
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 2404
	lea	eax, DWORD PTR [edi+esi]
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
; Line 244
	pop	edi
	pop	esi
; Line 245
	pop	ebp
	ret	0
??$_Uninitialized_move_al_unchecked@HHV?$allocator@H@std@@@std@@YAPAHQAH00AAV?$allocator@H@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<int,int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Seek_wrapped@H@std@@YAXAAPAHQAH@Z
_TEXT	SEGMENT
??$_Seek_wrapped@H@std@@YAXAAPAHQAH@Z PROC		; std::_Seek_wrapped<int>, COMDAT
; __It$ = ecx
; __UIt$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 872
	mov	DWORD PTR [ecx], edx
; Line 873
	ret	0
??$_Seek_wrapped@H@std@@YAXAAPAHQAH@Z ENDP		; std::_Seek_wrapped<int>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$?0_JX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QAE@AB_J@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$?0_JX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QAE@AB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000> >::duration<__int64,std::ratio<1,1000> ><__int64,void>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 89
	push	ebp
	mov	ebp, esp
; Line 88
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 90
	mov	eax, ecx
	pop	ebp
	ret	4
??$?0_JX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QAE@AB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000> >::duration<__int64,std::ratio<1,1000> ><__int64,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QBE_JXZ
_TEXT	SEGMENT
?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QBE_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1000> >::count, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 104
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
; Line 105
	ret	0
?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QBE_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1000> >::count
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$?M_JU?$ratio@$00$0DOI@@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@0@Z
_TEXT	SEGMENT
??$?M_JU?$ratio@$00$0DOI@@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@0@Z PROC ; std::chrono::operator<<__int64,std::ratio<1,1000>,__int64,std::ratio<1,1000> >, COMDAT
; __Left$ = ecx
; __Right$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 457
	mov	eax, DWORD PTR [ecx+4]
	push	esi
	mov	esi, DWORD PTR [edx]
	cmp	eax, DWORD PTR [edx+4]
	jg	SHORT $LN3@operator
	jl	SHORT $LN9@operator
	cmp	DWORD PTR [ecx], esi
	jae	SHORT $LN3@operator
$LN9@operator:
	mov	al, 1
; Line 458
	pop	esi
	ret	0
$LN3@operator:
; Line 457
	xor	al, al
; Line 458
	pop	esi
	ret	0
??$?M_JU?$ratio@$00$0DOI@@std@@_JU01@@chrono@std@@YA_NABV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@0@Z ENDP ; std::chrono::operator<<__int64,std::ratio<1,1000>,__int64,std::ratio<1,1000> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z
_TEXT	SEGMENT
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,void>, COMDAT
; ___$ReturnUdt$ = ecx
; __Dur$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 499
	push	esi
; Line 507
	push	0
	push	100					; 00000064H
	push	DWORD PTR [edx+4]
	mov	esi, ecx
	push	DWORD PTR [edx]
	call	__allmul
	mov	DWORD PTR [esi], eax
	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
; Line 521
	pop	esi
	ret	0
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z
_TEXT	SEGMENT
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,void>, COMDAT
; ___$ReturnUdt$ = ecx
; __Dur$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\chrono
; Line 499
	push	esi
; Line 507
	push	0
	push	1000000000				; 3b9aca00H
	push	DWORD PTR [edx+4]
	mov	esi, ecx
	push	DWORD PTR [edx]
	call	__allmul
	mov	DWORD PTR [esi], eax
	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
; Line 521
	pop	esi
	ret	0
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@ABV?$duration@_JU?$ratio@$00$00@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,void>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??$_Copy_memmove@PAHPAH@std@@YAPAHPAH00@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
??$_Copy_memmove@PAHPAH@std@@YAPAHPAH00@Z PROC		; std::_Copy_memmove<int *,int *>, COMDAT
; __First$ = ecx
; __Last$ = edx
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
; Line 2398
	push	ebp
	mov	ebp, esp
	push	esi
; Line 2403
	mov	esi, DWORD PTR __Dest$[ebp]
	push	edi
	mov	edi, edx
	sub	edi, ecx
	push	edi
	push	ecx
	push	esi
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 2404
	lea	eax, DWORD PTR [edi+esi]
	pop	edi
	pop	esi
; Line 2405
	pop	ebp
	ret	0
??$_Copy_memmove@PAHPAH@std@@YAPAHPAH00@Z ENDP		; std::_Copy_memmove<int *,int *>
_TEXT	ENDS
END
